<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewLife.Cube</name>
    </assembly>
    <members>
        <member name="T:NewLife.Cube.Areas.Admin.AdminArea">
            <summary>权限管理区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.AdminArea.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.AccessRuleController">
            <summary>访问规则</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.CoreController">
            <summary>设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.CubeController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.CubeController.GetLoginConfig">
            <summary>
            获取登录设置
            </summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.DbController">
            <summary>数据库管理</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.DbController.Index">
            <summary>数据库列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.DbController.Backup(System.String)">
            <summary>备份数据库</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.DbController.BackupAndCompress(System.String)">
            <summary>备份并压缩数据库</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.DbController.Download(System.String)">
            <summary>下载数据库备份</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.DepartmentController">
            <summary>部门</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.DepartmentController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.FileController">
            <summary>文件管理</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>构造函数</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Index(System.String,System.String,System.String)">
            <summary>文件管理主视图</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Delete(System.String)">
            <summary>删除</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Compress(System.String)">
            <summary>压缩文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Decompress(System.String)">
            <summary>解压缩</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Upload(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>上传文件</summary>
            <param name="r"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.UploadLayui(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>上传文件</summary>
            <param name="r"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.UploadAvatar(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>上传头像</summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Download(System.String)">
            <summary>下载文件</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Copy(System.String,System.String)">
            <summary>复制文件到剪切板</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.CancelCopy(System.String,System.String)">
            <summary>从剪切板移除</summary>
            <param name="r"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Paste(System.String)">
            <summary>粘贴文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.Move(System.String)">
            <summary>移动文件到当前目录</summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.FileController.ClearClipboard(System.String)">
            <summary>清空剪切板</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.IndexController">
            <summary>首页</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.#ctor(XCode.Membership.IManageProvider,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.Index">
            <summary>首页</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.Main">
            <summary>服务器信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.ServerVarList">
            <summary>服务器变量列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.ProcessList(System.String)">
            <summary>进程模块列表</summary>
            <param name="model">All全部,OnlyUser用户</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.AssemblyList(System.String)">
            <summary>程序集列表</summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.Restart">
            <summary>重启</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.MemoryFree">
            <summary>
            释放内存，参考之前的Runtime方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.IndexController.GetMenuTree">
            <summary>
            获取菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.LogController">
            <summary>审计日志控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.LogController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.MenuController">
            <summary>菜单控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.MenuController.Valid(XCode.Membership.Menu,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.OAuthConfigController">
            <summary>OAuth配置</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.OAuthLogController">
            <summary>OAuth日志</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.OAuthLogController.Search(NewLife.Web.Pager)">
            <summary>搜索</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.ParameterController">
            <summary>字典参数</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.RoleController">
            <summary>角色控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.Insert(XCode.Membership.Role)">
            <summary>
            添加权限授权
            </summary>
            <param name="entity"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.Update(XCode.Membership.Role)">
            <summary>保存</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.GetHostAddresses">
            <summary>
            获取客户端IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.AddDetailed(XCode.IEntity)">
            <summary>添加实体主表对应的从表记录</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.RoleController.Valid(XCode.Membership.Role,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.SysController">
            <summary>系统设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.TenantController">
            <summary>租户管理</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.TenantController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.TenantUserController">
            <summary>租户关系</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.TenantUserController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.UserConnectController">
            <summary>用户链接控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserConnectController.#ctor">
            <summary>构造</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserConnectController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.UserController">
            <summary>用户控制器</summary>
        </member>
        <member name="F:NewLife.Cube.Areas.Admin.Controllers.UserController._cache">
            <summary>用于防爆破登录。即使内存缓存，也有一定用处，最糟糕就是每分钟重试次数等于集群节点数的倍数</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.#ctor(NewLife.Cube.Services.PasswordService,NewLife.Caching.ICacheProvider)">
            <summary>
            实例化用户控制器
            </summary>
            <param name="passwordService"></param>
            <param name="cacheProvider"></param>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Valid(XCode.Membership.User,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Login(NewLife.Cube.Areas.Admin.Models.LoginModel)">
            <summary>密码登录</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Logout">
            <summary>注销</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Info">
            <summary>获取当前登录用户资料</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Info(XCode.Membership.User)">
            <summary>更新用户资料</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.ChangePassword(NewLife.Cube.Areas.Admin.Models.ChangePasswordModel)">
            <summary>修改密码</summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Binds">
            <summary>用户绑定</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.Register(NewLife.Cube.Areas.Admin.Models.RegisterModel)">
            <summary>注册</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserController.ClearPassword(System.Int32)">
            <summary>清空密码</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.UserOnlineController">
            <summary>用户在线控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserOnlineController.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserOnlineController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserOnlineController.Valid(NewLife.Cube.Entity.UserOnline,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证数据</summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.UserStatController">
            <summary>访问统计控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserStatController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.UserTokenController">
            <summary>用户令牌控制器</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserTokenController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Controllers.UserTokenController.ValidPermission(NewLife.Cube.Entity.UserToken,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证权限</summary>
            <param name="entity">实体对象</param>
            <param name="type">操作类型</param>
            <param name="post">是否提交数据阶段</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Controllers.XCodeController">
            <summary>设置控制器</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.BindsModel">
            <summary>第三方绑定模型</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.BindsModel.Name">
            <summary>用户名</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.BindsModel.Connects">
            <summary>用户链接集合</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.BindsModel.OAuthItems">
            <summary>可选的第三方</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel">
            <summary>修改密码模型</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel.Name">
            <summary>用户名</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel.SsoName">
            <summary>Sso登录渠道</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel.OldPassword">
            <summary>旧密码</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel.NewPassword">
            <summary>新密码</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.ChangePasswordModel.NewPassword2">
            <summary>确认密码</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.LoginViewModel">
            <summary>登录视图模型</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.Logo">
            <summary>Logo</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.AllowLogin">
            <summary>允许登录</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.AllowRegister">
            <summary>允许注册</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.LoginTip">
            <summary>登录提示</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.ResourceUrl">
            <summary>资源地址。指向CDN，如 https://sso.newlifex.com/content/，留空表示使用本地</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.ReturnUrl">
            <summary>返回地址</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginViewModel.OAuthItems">
            <summary>OAuth系统集合</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.ICubeModel">
            <summary>
            继承此接口，可通过json方式传值
            </summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.LoginModel">
            <summary>
            登录模型
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginModel.Username">
            <summary>
            登录用户名
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginModel.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.LoginModel.Remember">
            <summary>
            记住登录状态
            </summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.RegisterModel">
            <summary>注册模型</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.RegisterModel.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.RegisterModel.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.RegisterModel.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.RegisterModel.Password2">
            <summary>
            确认密码
            </summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Admin.Models.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Name">
            <summary>名称。登录用户名</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Password">
            <summary>密码</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.DisplayName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Sex">
            <summary>性别。未知、男、女</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Mail">
            <summary>邮件</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Mobile">
            <summary>手机</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Code">
            <summary>代码。身份证、员工编号等</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RoleID">
            <summary>角色。主要角色</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RoleIds">
            <summary>角色组。次要角色集合</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RoleName">
            <summary>
            主要角色名
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RoleNames">
            <summary>
            角色集合名，逗号隔开
            </summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.DepartmentID">
            <summary>部门。组织机构</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Online">
            <summary>在线</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Logins">
            <summary>登录次数</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.LastLogin">
            <summary>最后登录</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.LastLoginIP">
            <summary>最后登录IP</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RegisterTime">
            <summary>注册时间</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.RegisterIP">
            <summary>注册IP</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex1">
            <summary>扩展1</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex2">
            <summary>扩展2</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex3">
            <summary>扩展3</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex4">
            <summary>扩展4</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex5">
            <summary>扩展5</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Ex6">
            <summary>扩展6</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.UpdateUser">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Areas.Admin.Models.UserInfo.Permission">
            <summary>
            包括角色组的权限集合
            </summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Models.UserInfo.SetPermission(XCode.Membership.IRole[])">
            <summary>
            设置用户权限集合
            </summary>
            <param name="roles"></param>
        </member>
        <member name="M:NewLife.Cube.Areas.Admin.Models.UserInfo.SetRoleNames(XCode.Membership.IRole[])">
            <summary>
            设置所有角色名
            </summary>
            <param name="roles"></param>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.AppController">
            <summary>应用系统</summary>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.AppLogController">
            <summary>应用日志</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.AppLogController.Search(NewLife.Web.Pager)">
            <summary>搜索</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.AreaController">
            <summary>地区</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.AreaController.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.AttachmentController">
            <summary>附件管理</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.AttachmentController.Search(NewLife.Web.Pager)">
            <summary>搜索</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.CronJobController">
            <summary>定时任务</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.CronJobController.Valid(NewLife.Cube.Entity.CronJob,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>修改数据时，唤醒作业服务跟进</summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.CronJobController.ExecuteNow(System.String)">
            <summary>马上执行</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.OrderManagerController">
            <summary></summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.OrderManagerController.GetInfo(System.String)">
            <summary>根据code获取指令集合</summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.Controllers.PrincipalAgentController">
            <summary>委托代理</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.Controllers.PrincipalAgentController.Valid(NewLife.Cube.Entity.PrincipalAgent,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>
            添加页面初始化数据
            </summary>
            <param name="entity"></param>
            <param name="type"></param>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Areas.Cube.CubeArea">
            <summary>魔方管理区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.Areas.Cube.CubeArea.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NewLife.Cube.Admin.DbItem">
            <summary>数据项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Type">
            <summary>数据库类型</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.ConnStr">
            <summary>连接字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Version">
            <summary>数据驱动版本</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Dynamic">
            <summary>是否动态</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.DbItem.Backups">
            <summary>备份数</summary>
        </member>
        <member name="T:NewLife.Cube.Admin.FileItem">
            <summary>文件项</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Name">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.FullName">
            <summary>全路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Raw">
            <summary>原始路径</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Directory">
            <summary>是否目录</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.Size">
            <summary>大小字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Admin.FileItem.LastWrite">
            <summary>最后写入时间</summary>
        </member>
        <member name="T:NewLife.Cube.ApiFilterAttribute">
            <summary>统一Api过滤处理</summary>
            <remarks>
            1，解析访问令牌
            2，包装响应结果为标准Json格式
            3，拦截异常，包装为标准Json格式
            </remarks>
        </member>
        <member name="M:NewLife.Cube.ApiFilterAttribute.GetToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>从请求头中获取令牌</summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ApiFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>执行前，验证模型</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.ApiFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>执行后，包装结果和异常</summary>
            <param name="context"></param>
        </member>
        <member name="T:NewLife.Cube.IApiResponse">
            <summary>响应模型</summary>
        </member>
        <member name="P:NewLife.Cube.IApiResponse.Code">
            <summary>代码。0表示成功，其它为错误代码</summary>
        </member>
        <member name="P:NewLife.Cube.IApiResponse.Message">
            <summary>消息内容。成功或错误时的提示文本</summary>
        </member>
        <member name="T:NewLife.Cube.ApiResponse`1">
            <summary>响应模型</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NewLife.Cube.ApiResponse`1.Code">
            <summary>代码。0表示成功，其它为错误代码</summary>
        </member>
        <member name="P:NewLife.Cube.ApiResponse`1.Message">
            <summary>消息内容。成功或错误时的提示文本</summary>
        </member>
        <member name="P:NewLife.Cube.ApiResponse`1.Data">
            <summary>响应数据</summary>
        </member>
        <member name="P:NewLife.Cube.ApiResponse`1.TraceId">
            <summary>跟踪编号</summary>
        </member>
        <member name="M:NewLife.Cube.ApiResponse`1.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.ApiResponse`1.#ctor(System.Int32,System.String)">
            <summary>实例化</summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:NewLife.Cube.ApiResponse`1.#ctor(System.Int32,System.String,`0)">
            <summary>实例化</summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="T:NewLife.Cube.ApiListResponse`1">
            <summary>列表响应模型</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NewLife.Cube.ApiListResponse`1.Page">
            <summary>分页信息</summary>
        </member>
        <member name="P:NewLife.Cube.ApiListResponse`1.Stat">
            <summary>统计行数据</summary>
        </member>
        <member name="T:NewLife.Cube.AppControllerBase">
            <summary>应用接口控制器基类。继承该类可实现各种基于令牌的业务接口</summary>
        </member>
        <member name="P:NewLife.Cube.AppControllerBase.App">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.AppControllerBase.Jwt">
            <summary>令牌对象</summary>
        </member>
        <member name="M:NewLife.Cube.AppControllerBase.#ctor(NewLife.Cube.Services.TokenService)">
            <summary>实例化</summary>
            <param name="tokenService"></param>
        </member>
        <member name="M:NewLife.Cube.AppControllerBase.OnAuthorize(System.String)">
            <summary>验证令牌，并获取应用</summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.AppControllerBase.OnWriteError(System.String,System.String)">
            <summary>输出错误日志</summary>
            <param name="action"></param>
            <param name="message"></param>
        </member>
        <member name="M:NewLife.Cube.AppControllerBase.WriteLog(System.String,System.Boolean,System.String)">
            <summary>写日志</summary>
            <param name="action"></param>
            <param name="success"></param>
            <param name="message"></param>
        </member>
        <member name="T:NewLife.Cube.AreaBase">
            <summary>区域特性基类</summary>
            <remarks>
            提供以下功能：
            1，区域名称。从类名中截取。其中DisplayName特性作为菜单中文名。
            2，静态构造注册一次视图引擎、绑定提供者、过滤器
            3，注册区域默认路由
            </remarks>
        </member>
        <member name="P:NewLife.Cube.AreaBase.GroupName">
            <summary>分组名称</summary>
        </member>
        <member name="M:NewLife.Cube.AreaBase.#ctor(System.String)">
            <summary>实例化区域注册</summary>
        </member>
        <member name="M:NewLife.Cube.AreaBase.RegisterArea``1">
            <summary>注册区域，每个继承此区域特性的类的静态构造函数都调用此方法，以进行相关注册</summary>
        </member>
        <member name="M:NewLife.Cube.AreaBase.RegisterArea(System.Type)">
            <summary>注册区域，每个继承此区域特性的类的静态构造函数都调用此方法，以进行相关注册</summary>
        </member>
        <member name="M:NewLife.Cube.AreaBase.ScanController(System.Type)">
            <summary>自动扫描控制器，并添加到菜单</summary>
            <remarks>默认操作当前注册区域的下一级Controllers命名空间</remarks>
        </member>
        <member name="M:NewLife.Cube.AreaBase.Contains(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>判断控制器是否归属于魔方管辖</summary>
            <param name="controllerActionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.AreaBase.GetAreas">
            <summary>获取所有区域</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.BaseController">
            <summary>业务接口控制器基类</summary>
            <remarks>
            提供统一的令牌解码验证架构
            </remarks>
        </member>
        <member name="P:NewLife.Cube.BaseController.Token">
            <summary>令牌</summary>
        </member>
        <member name="P:NewLife.Cube.BaseController.UserHost">
            <summary>用户主机</summary>
        </member>
        <member name="M:NewLife.Cube.BaseController.OnAuthorize(System.String)">
            <summary>验证令牌，并获取应用</summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.BaseController.OnWriteError(System.String,System.String)">
            <summary>输出错误日志</summary>
            <param name="action"></param>
            <param name="message"></param>
        </member>
        <member name="T:NewLife.Cube.ConfigController`1">
            <summary>设置控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ConfigController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="T:NewLife.Cube.ControllerBaseX">
            <summary>控制器基类</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.Session">
            <summary>临时会话扩展信息。仅限本地内存，不支持分布式共享</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.Token">
            <summary>令牌</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.Menu">
            <summary>当前页面菜单。用于权限控制</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.CurrentUser">
            <summary>当前用户</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.CurrentTenant">
            <summary>当前租户</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.UserHost">
            <summary>用户主机</summary>
        </member>
        <member name="P:NewLife.Cube.ControllerBaseX.PageSetting">
            <summary>页面设置</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.#ctor">
            <summary>实例化控制器</summary>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>动作执行后</summary>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.GetRequest(System.String)">
            <summary>获取请求值</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.Json(System.Int32,System.String,System.Object,System.Object)">
            <summary>响应Json结果</summary>
            <param name="code">代码。0成功，其它为错误代码</param>
            <param name="message">消息，成功或失败时的文本消息</param>
            <param name="data">数据对象</param>
            <param name="extend">扩展数据</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.OnJsonSerialize(System.Object)">
            <summary>Json序列化。默认使用FastJson</summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.WriteLog(System.String,System.Boolean,System.String)">
            <summary>写审计日志</summary>
            <param name="action"></param>
            <param name="success"></param>
            <param name="remark"></param>
        </member>
        <member name="M:NewLife.Cube.ControllerBaseX.GetControllerAction">
            <summary>获取控制器名称，返回 area, controller, action</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.DataPermissionAttribute">
            <summary>数据权限过滤器</summary>
        </member>
        <member name="P:NewLife.Cube.DataPermissionAttribute.SystemRoles">
            <summary>不受数据权限限制的系统角色</summary>
        </member>
        <member name="P:NewLife.Cube.DataPermissionAttribute.Expression">
            <summary>数据权限表达式，用于构造查询条件，如 linkid in {#SiteIds} or CreateUserID={$user.Id}</summary>
        </member>
        <member name="M:NewLife.Cube.DataPermissionAttribute.#ctor(System.String,System.String)">
            <summary>数据权限过滤器</summary>
            <param name="systemRoles"></param>
            <param name="expression"></param>
        </member>
        <member name="M:NewLife.Cube.DataPermissionAttribute.Valid(XCode.Membership.IRole[])">
            <summary>验证是否系统角色</summary>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityAuthorizeAttribute">
            <summary>实体授权特性</summary>
        </member>
        <member name="P:NewLife.Cube.EntityAuthorizeAttribute.Permission">
            <summary>授权项</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor">
            <summary>实例化实体授权特性</summary>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.#ctor(XCode.Membership.PermissionFlags)">
            <summary>实例化实体授权特性</summary>
            <param name="permission"></param>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>授权发生时触发</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.EntityAuthorizeAttribute.NoPermission(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,XCode.Membership.IMenu,XCode.Membership.PermissionFlags)">
            <summary>无权访问</summary>
            <param name="filterContext"></param>
            <param name="menu"></param>
            <param name="permission"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityController`1">
            <summary>实体控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:NewLife.Cube.EntityController`2">
            <summary>实体控制器基类</summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TModel">数据模型，用于接口数据传输</typeparam>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.Delete(System.String)">
            <summary>删除数据</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.Insert(`1)">
            <summary>添加数据</summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.Insert(`0)">
            <summary>添加数据</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.Update(`1)">
            <summary>更新数据</summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.Update(`0)">
            <summary>更新数据</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.SaveFiles(`0,System.String)">
            <summary>保存所有上传文件</summary>
            <param name="entity">实体对象</param>
            <param name="uploadPath">上传目录。为空时默认UploadPath配置</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.SaveFile(`0,Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>保存单个文件</summary>
            <param name="entity">实体对象</param>
            <param name="file">文件</param>
            <param name="uploadPath">上传目录，默认使用UploadPath配置</param>
            <param name="fileName">文件名，如若指定则忽略前面的目录</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.EnableOrDisableSelect(System.Boolean,System.String)">
            <summary>
            批量启用或禁用
            </summary>
            <param name="isEnable">启用/禁用</param>
            <param name="reason">操作原因</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.OnInsert(`0)">
            <summary>添加实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.OnUpdate(`0)">
            <summary>更新实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityController`2.OnDelete(`0)">
            <summary>删除实体对象</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.EntityTreeController`1">
            <summary>实体树控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:NewLife.Cube.EntityTreeController`2">
            <summary>实体树控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TModel">数据模型，用于接口数据传输</typeparam>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`2.Search(NewLife.Web.Pager)">
            <summary>实体树的数据来自缓存</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`2.Up(System.Int32)">
            <summary>上升</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`2.Down(System.Int32)">
            <summary>下降</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.EntityTreeController`2.FindByID(System.Int32)">
            <summary>根据ID查找节点</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Common.FormatEntity">
            <summary>
            实体格式化助手
            </summary>
        </member>
        <member name="M:NewLife.Cube.Common.FormatEntity.FromExcelToEntity(XCode.Configuration.FieldItem,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            根据excel内容赋值实体内容
            </summary>
            <param name="fieldsItem"></param>
            <param name="item"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.MembershipExtensions">
            <summary>用户扩展</summary>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(Microsoft.AspNetCore.Mvc.Razor.IRazorPage,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="page">页面</param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.MembershipExtensions.Has(Microsoft.AspNetCore.Mvc.Razor.IRazorPage,XCode.Membership.IMenu,XCode.Membership.PermissionFlags[])">
            <summary>用户只有拥有当前菜单的指定权限</summary>
            <param name="page">页面</param>
            <param name="menu">菜单</param>
            <param name="flags">是否拥有多个权限中的任意一个，或的关系。如果需要表示与的关系，可以传入一个多权限位合并</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.MenuModes">
            <summary>菜单模式</summary>
        </member>
        <member name="F:NewLife.Cube.MenuModes.Admin">
            <summary>管理后台可见</summary>
        </member>
        <member name="F:NewLife.Cube.MenuModes.Tenant">
            <summary>租户可见</summary>
        </member>
        <member name="T:NewLife.Cube.MenuAttribute">
            <summary>菜单特性</summary>
        </member>
        <member name="P:NewLife.Cube.MenuAttribute.Order">
            <summary>
            顺序。较大者在前面
            </summary>
        </member>
        <member name="P:NewLife.Cube.MenuAttribute.Visible">
            <summary>
            可见
            </summary>
        </member>
        <member name="P:NewLife.Cube.MenuAttribute.Mode">
            <summary>菜单模式。控制在管理后台和租户模式下是否可见</summary>
        </member>
        <member name="P:NewLife.Cube.MenuAttribute.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:NewLife.Cube.MenuAttribute.LastUpdate">
            <summary>最后更新时间。小于该更新时间的菜单设置将被覆盖。</summary>
            <remarks>一般应用于区域类，表明代码已修改菜单参数，希望强行覆盖已有菜单设置</remarks>
        </member>
        <member name="M:NewLife.Cube.MenuAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>
            设置菜单特性
            </summary>
            <param name="order"></param>
            <param name="visible"></param>
        </member>
        <member name="T:NewLife.Cube.NoPermissionException">
            <summary>没有权限</summary>
        </member>
        <member name="P:NewLife.Cube.NoPermissionException.Permission">
            <summary>权限</summary>
        </member>
        <member name="M:NewLife.Cube.NoPermissionException.#ctor(XCode.Membership.PermissionFlags,System.String)">
            <summary>实例化</summary>
            <param name="pm"></param>
            <param name="message"></param>
        </member>
        <member name="T:NewLife.Cube.OAuthController">
            <summary>OAuth服务。向应用提供验证服务</summary>
        </member>
        <member name="M:NewLife.Cube.OAuthController.#ctor(NewLife.Cube.Services.TokenService)">
            <summary>实例化</summary>
            <param name="tokenService"></param>
        </member>
        <member name="M:NewLife.Cube.OAuthController.Token(NewLife.Cube.Models.TokenInModel)">
            <summary>验证密码颁发令牌，或刷新令牌</summary>
            <param name="model"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:NewLife.Cube.OAuthController.Info(System.String)">
            <summary>根据令牌获取应用信息，同时也是验证令牌是否有效</summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ObjectController`1">
            <summary>对象控制器</summary>
        </member>
        <member name="P:NewLife.Cube.ObjectController`1.Value">
            <summary>要展现和修改的对象</summary>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Index">
            <summary>显示对象</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.Update(`0)">
            <summary>保存对象</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.GetFields(NewLife.Cube.ViewModels.ViewKinds)">
            <summary>
            获取字段
            </summary>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.WriteLog(`0,System.String)">
            <summary>写日志</summary>
            <param name="obj"></param>
            <param name="ip"></param>
        </member>
        <member name="M:NewLife.Cube.ObjectController`1.GetMembers(System.Type)">
            <summary>获取指定类型的成员集合（带缓存）</summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.PageSetting">
            <summary>页面设置。用于控制各页面功能</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.Global">
            <summary>全局设置</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.NavView">
            <summary>导航条所对应的视图。用于多页面共用导航条</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableNavbar">
            <summary>启用导航栏。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableToolbar">
            <summary>启用工具栏。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableAdd">
            <summary>启用添加按钮。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableKey">
            <summary>启用关键字搜索。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableSelect">
            <summary>启用选择列。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableFooter">
            <summary>启用尾部。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.IsReadOnly">
            <summary>是否只读页面。只读页面没有添加编辑删除等按钮</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.EnableTableDoubleClick">
            <summary>启用列表双击事件配置</summary>
        </member>
        <member name="P:NewLife.Cube.PageSetting.OrderByKey">
            <summary>是否启用默认的数字主键降序。默认true</summary>
        </member>
        <member name="M:NewLife.Cube.PageSetting.Clone">
            <summary>克隆</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ReadOnlyEntityController`1">
            <summary>只读实体控制器基类</summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.Factory">
            <summary>实体工厂</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.LogOnChange">
            <summary>实体改变时写日志。默认false</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.SysConfig">
            <summary>系统配置</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.CacheKey">
            <summary>当前列表页的查询条件缓存Key</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.#ctor">
            <summary>构造函数</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>动作执行前</summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Search(NewLife.Web.Pager)">
            <summary>搜索数据集</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.SearchData(NewLife.Web.Pager)">
            <summary>搜索数据，支持数据权限</summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Find(System.Object)">
            <summary>查找单行数据</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.FindData(System.Object)">
            <summary>查找单行数据，并判断数据权限</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.CreateWhere">
            <summary>创建查询条件构造器，主要用于数据权限</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.IsTenantSource">
            <summary>是否租户实体类</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.SelectKeys">
            <summary>获取选中键</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportData(System.Int32)">
            <summary>多次导出数据</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportDataByPage(System.Int32,System.Int32)">
            <summary>分页导出数据</summary>
            <param name="pageSize">页大小。默认10_000</param>
            <param name="max">最大行数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ExportDataByDatetime(System.Int32,System.Int32)">
            <summary>时间分片导出数据</summary>
            <param name="step">分片不仅。默认60</param>
            <param name="max">最大行数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Index">
            <summary>多行数据列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Detail(System.String)">
            <summary>查看单行数据</summary>
            <param name="id">主键。可能为空（表示添加），所以用字符串而不是整数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.Valid(`0,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity">实体对象</param>
            <param name="type">操作类型</param>
            <param name="post">是否提交数据阶段</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.ValidPermission(`0,System.ComponentModel.DataObjectMethodType,System.Boolean)">
            <summary>验证实体对象</summary>
            <param name="entity">实体对象</param>
            <param name="type">操作类型</param>
            <param name="post">是否提交数据阶段</param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.ListFields">
            <summary>列表字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.AddFormFields">
            <summary>表单字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.EditFormFields">
            <summary>表单字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.DetailFields">
            <summary>表单字段过滤</summary>
        </member>
        <member name="P:NewLife.Cube.ReadOnlyEntityController`1.SearchFields">
            <summary>搜索字段过滤</summary>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.OnGetFields(NewLife.Cube.ViewModels.ViewKinds,System.Object)">
            <summary>获取字段信息。支持用户重载并根据上下文定制界面</summary>
            <param name="kind">字段类型：1-列表List、2-详情Detail、3-添加AddForm、4-编辑EditForm、5-搜索Search</param>
            <param name="model">获取字段列表时的相关模型。对webapi版暂时无效</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ReadOnlyEntityController`1.GetFields(NewLife.Cube.ViewModels.ViewKinds)">
            <summary>获取字段信息。支持用户重载并根据上下文定制界面</summary>
            <param name="kind">字段类型：1-列表List、2-详情Detail、3-添加AddForm、4-编辑EditForm、5-搜索Search</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewHelper">
            <summary>视图助手</summary>
        </member>
        <member name="F:NewLife.Cube.ViewHelper.CreateBootstrap">
            <summary>创建页面设置的委托</summary>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>获取页面设置</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.Bootstrap(Microsoft.AspNetCore.Mvc.Controller)">
            <summary>获取页面设置</summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetRouteKey(XCode.IEntity)">
            <summary>获取路由Key</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetRouteValue(NewLife.Web.Pager)">
            <summary>获取排序分页以外的参数</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.EnableSelect(Microsoft.AspNetCore.Mvc.Razor.IRazorPage)">
            <summary>是否启用多选</summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetAvatarUrl(XCode.Membership.IUser)">
            <summary>获取头像地址</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetFileUrl(System.String)">
            <summary>
            根据文件名称获取文件地址
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.IsDevelop">
            <summary>当前是否开发环境。判断csproj文件</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetLogo(System.String)">
            <summary>获取指定名称的Logo图标</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetMenus(XCode.Membership.IUser)">
            <summary>
            获取用户所拥有的菜单
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.GetAttachmentUrl(NewLife.Cube.Entity.Attachment)">
            <summary>获取附件Url</summary>
            <param name="attachment"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewHelper.IsAttachment(XCode.DataAccessLayer.IDataColumn)">
            <summary>是否附件列</summary>
            <param name="dc"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Bootstrap">
            <summary>Bootstrap页面控制。允许继承</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.MaxColumn">
            <summary>最大列数</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.LabelWidth">
            <summary>默认标签宽度</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Type">
            <summary>类型</summary>
        </member>
        <member name="P:NewLife.Cube.Bootstrap.Length">
            <summary>长度</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.Set(XCode.Configuration.FieldItem)">
            <summary>设置项</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.#ctor">
            <summary>实例化一个页面助手</summary>
        </member>
        <member name="M:NewLife.Cube.Bootstrap.GetGroupWidth">
            <summary>获取分组宽度</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Controllers.CubeController">
            <summary>魔方前端数据接口</summary>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.EndpointDataSource})">
            <summary>构造函数</summary>
            <param name="sources"></param>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.Info(System.String)">
            <summary>服务器信息，用户健康检测</summary>
            <param name="state">状态信息</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.Apis">
            <summary>获取所有接口信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.UserSearch(System.Int32,System.Int32,System.String)">
            <summary>用户搜索</summary>
            <param name="roleId"></param>
            <param name="departmentId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.DepartmentSearch(System.Int32,System.String)">
            <summary>网点搜索</summary>
            <param name="parentid"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.GetArea(System.Int32)">
            <summary>地区信息</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.AreaChilds(System.Int32)">
            <summary>获取地区子级</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.AreaParents(System.Int32,System.Boolean)">
            <summary>获取地区父级</summary>
            <param name="id">查询地区编号</param>
            <param name="isContainSelf">是否包含查询的地区</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.AreaAllParents(System.Int32)">
            <summary>获取地区所有父级</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.Avatar(System.Int32)">
            <summary>获取用户头像</summary>
            <param name="id">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.Lookup(System.String)">
            <summary>查询一批Code的数据源</summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.SaveLayout(System.Int32,System.String,System.String,System.String)">
            <summary>
            根据用户、类别及具体的名字保存字典参数到后台
            </summary>
            <param name="userid">The user identifier.</param>
            <param name="category">The category.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.Image(System.String)">
            <summary>
            访问图片附件
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.CubeController.File(System.String)">
            <summary>
            访问附件
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Controllers.SsoController">
            <summary>单点登录控制器</summary>
        </member>
        <member name="P:NewLife.Cube.Controllers.SsoController.Provider">
            <summary>当前提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Controllers.SsoController.OAuth">
            <summary>单点登录服务端</summary>
        </member>
        <member name="F:NewLife.Cube.Controllers.SsoController._cache">
            <summary>存储最近用过的code，避免用户刷新页面</summary>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.#ctor(NewLife.Caching.ICacheProvider)">
            <summary>实例化单点登录控制器</summary>
            <param name="cacheProvider"></param>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Login(System.String)">
            <summary>第三方登录</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.LoginInfo(System.String,System.String,System.String)">
            <summary>第三方登录完成后跳转到此</summary>
            <param name="id">提供者</param>
            <param name="code"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Logout">
            <summary>注销登录</summary>
            <remarks>
            子系统引导用户跳转到这里注销登录。
            </remarks>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Bind(System.String)">
            <summary>绑定</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.UnBind(System.String)">
            <summary>取消绑定</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Authorize(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>1，验证用户身份</summary>
            <remarks>
            子系统需要验证访问者身份时，引导用户跳转到这里。
            用户登录完成后，得到一个独一无二的code，并跳转回去子系统。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="redirect_uri">回调地址</param>
            <param name="response_type">响应类型。默认code</param>
            <param name="scope">授权域</param>
            <param name="state">用户状态数据</param>
            <param name="loginUrl">登录页。子系统请求SSO时，如果在SSO未登录则直接跳转的地址，该地址有可能属于子系统自身，适用于password模式登录等场景</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Auth2(System.String)">
            <summary>2，用户登录成功后返回这里</summary>
            <remarks>
            构建身份验证结构，返回code给子系统
            </remarks>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Access_Token(System.String,System.String,System.String,System.String)">
            <summary>3，根据code获取令牌</summary>
            <remarks>
            子系统根据验证用户身份时得到的code，直接在服务器间请求本系统。
            传递应用标识和密钥，主要是为了向本系统表明其合法身份。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="client_secret">密钥</param>
            <param name="code">代码</param>
            <param name="grant_type">授权类型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Token(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>3，根据password/client_credentials获取令牌</summary>
            <remarks>
            密码式：
            用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）。
            为了避免密码暴露在Url中，需要用表单Post方式提交。
            凭证式：
            凭证式（client credentials），适用于没有前端的命令行应用，即在命令行下请求令牌。
            针对第三方应用，而不是针对用户的，即有可能多个用户共享同一个令牌。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="client_secret">密钥</param>
            <param name="username">用户名。可以是设备编码等唯一使用者标识</param>
            <param name="password">密码</param>
            <param name="refresh_token">刷新令牌</param>
            <param name="grant_type">授权类型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.PasswordToken(NewLife.Cube.Web.Models.SsoTokenModel)">
            <summary>3，根据password/client_credentials获取令牌</summary>
            <remarks>
            密码式：
            用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）。
            凭证式：
            凭证式（client credentials），适用于没有前端的命令行应用，即在命令行下请求令牌。
            针对第三方应用，而不是针对用户的，即有可能多个用户共享同一个令牌。
            </remarks>
            <param name="model">请求模型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.UserInfo(System.String)">
            <summary>4，根据token获取用户信息</summary>
            <param name="access_token">访问令牌</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Refresh_Token(System.String,System.String,System.String)">
            <summary>5，刷新令牌</summary>
            <remarks>
            若access_token已超时，那么进行refresh_token会获取一个新的access_token，新的超时时间；
            若access_token未超时，那么进行refresh_token不会改变access_token，但超时时间会刷新，相当于续期access_token。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="grant_type">授权类型</param>
            <param name="refresh_token">刷新令牌</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Auth(System.String)">
            <summary>验证令牌是否有效</summary>
            <param name="access_token">应用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.GetKey(System.String,System.String)">
            <summary>获取应用公钥，用于验证令牌</summary>
            <param name="client_id">应用</param>
            <param name="client_secret">密钥</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Verify(System.String,System.String)">
            <summary>验证令牌，回写cookie</summary>
            <param name="access_token">应用</param>
            <param name="redirect_uri">回调地址</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.UserAuth(NewLife.Cube.Web.Models.SsoTokenModel)">
            <summary>用户验证。借助OAuth密码式验证，并返回用户信息</summary>
            <param name="model">令牌模型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Controllers.SsoController.Avatar(System.Int32)">
            <summary>获取用户头像</summary>
            <param name="id">用户编号</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.CubeService">
            <summary>魔方服务</summary>
        </member>
        <member name="P:NewLife.Cube.CubeService.AreaNames">
            <summary>区域名集合</summary>
        </member>
        <member name="M:NewLife.Cube.CubeService.AddCube(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>添加魔方，放在AddControllersWithViews之后</summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.CubeService.UseCube(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>使用魔方，放在UseEndpoints之前，自动探测是否UseRouting</summary>
            <param name="app"></param>
            <param name="env"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.CubeService.UseRouter(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder})">
            <summary>使用路由配置，用于注册路由映射</summary>
            <param name="app"></param>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthLog">
            <summary>OAuth日志。用于记录OAuth客户端请求，同时Id作为state，避免向OAuthServer泄漏本机Url</summary>
            <summary>OAuth日志。用于记录OAuth客户端请求，同时Id作为state，避免向OAuthServer泄漏本机Url</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.User">
            <summary>用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.UserName">
            <summary>用户</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.FindById(System.Int64)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.FindAllByProvider(System.String)">
            <summary>根据提供商查找</summary>
            <param name="provider">提供商</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.FindAllByConnectId(System.Int32)">
            <summary>根据链接查找</summary>
            <param name="connectId">链接</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.FindAllByUserId(System.Int32)">
            <summary>根据用户查找</summary>
            <param name="userId">用户</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.Search(System.String,System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="provider">提供商</param>
            <param name="connectId">链接</param>
            <param name="userId">用户</param>
            <param name="start">更新时间开始</param>
            <param name="end">更新时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.GetProviderList">
            <summary>获取提供商列表，字段缓存10分钟，分组统计数据最多的前20种，用于魔方前台下拉选择</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthLog.DeleteBefore(System.DateTime)">
            <summary>删除指定日期之前的数据</summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Provider">
            <summary>提供商</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.ConnectId">
            <summary>链接</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.UserId">
            <summary>用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Action">
            <summary>操作</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Success">
            <summary>成功</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Scope">
            <summary>授权域</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.State">
            <summary>状态数据</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Source">
            <summary>来源</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthLog.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthLog._">
            <summary>取得OAuth日志字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.ConnectId">
            <summary>链接</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.UserId">
            <summary>用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Scope">
            <summary>授权域</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.State">
            <summary>状态数据</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Source">
            <summary>来源</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthLog.__">
            <summary>取得OAuth日志字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.ConnectId">
            <summary>链接</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.UserId">
            <summary>用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Scope">
            <summary>授权域</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.State">
            <summary>状态数据</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Source">
            <summary>来源</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthLog.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.GrantTypes">
            <summary>OAuth2.0授权类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.GrantTypes.AuthorizationCode">
            <summary>
            授权码
            </summary>
        </member>
        <member name="F:NewLife.Cube.Entity.GrantTypes.Implicit">
            <summary>
            隐藏式
            </summary>
        </member>
        <member name="F:NewLife.Cube.Entity.GrantTypes.Password">
            <summary>
            密码式
            </summary>
        </member>
        <member name="F:NewLife.Cube.Entity.GrantTypes.ClientCredentials">
            <summary>
            客户端凭证
            </summary>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthConfig">
            <summary>OAuth配置。需要连接的OAuth认证方</summary>
            <summary>OAuth配置。需要连接的OAuth认证方</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.InitData">
            <summary>首次连接数据库时初始化数据，仅用于实体类重载，用户不应该调用该方法</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.ToString">
            <summary>已重载。显示友好名称</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.FindByName(System.String)">
            <summary>根据名称查找</summary>
            <param name="name">名称</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.Search(System.String,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="name">名称。AppID</param>
            <param name="start">更新时间开始</param>
            <param name="end">更新时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.Add(System.String,System.String,System.String,System.String)">
            <summary>添加配置</summary>
            <param name="name"></param>
            <param name="nickName"></param>
            <param name="logo"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.GetValids(NewLife.Cube.Entity.GrantTypes)">
            <summary>获取全部有效设置</summary>
            <param name="grantType">授权类型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OAuthConfig.GetVisibles">
            <summary>获取全部有效且可见设置</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Name">
            <summary>名称。提供者名称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Logo">
            <summary>图标</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AppId">
            <summary>应用标识</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Secret">
            <summary>应用密钥</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Server">
            <summary>服务地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AccessServer">
            <summary>令牌服务地址。可以不同于验证地址的内网直达地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.GrantType">
            <summary>授权类型</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Scope">
            <summary>授权范围</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AuthUrl">
            <summary>验证地址。跳转SSO的验证地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AccessUrl">
            <summary>令牌地址。根据code换取令牌的地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.UserUrl">
            <summary>用户地址。根据令牌获取用户信息的地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AppUrl">
            <summary>应用地址。域名和端口，应用系统经过反向代理重定向时指定外部地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Debug">
            <summary>调试。设置处于调试状态，输出详细日志</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Visible">
            <summary>可见。是否在登录页面可见，不可见的提供者只能使用应用内自动登录，例如微信公众号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AutoRegister">
            <summary>自动注册。SSO登录后，如果本地没有匹配用户，自动注册新用户，否则跳到登录页，在登录后绑定</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.AutoRole">
            <summary>自动角色。该渠道登录的用户，将会自动得到指定角色名，多个角色逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Sort">
            <summary>排序。较大者在前面</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.SecurityKey">
            <summary>安全密钥。公钥，用于RSA加密用户密码，在通信链路上保护用户密码安全，密钥前面可以增加keyName，形成keyName$keyValue，用于向服务端指示所使用的密钥标识，方便未来更换密钥。</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.FieldMap">
            <summary>字段映射。SSO用户字段如何映射到OAuthClient内部属性</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.FetchAvatar">
            <summary>抓取头像。是否抓取头像并保存到本地</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OAuthConfig.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthConfig._">
            <summary>取得OAuth配置字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Name">
            <summary>名称。提供者名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Logo">
            <summary>图标</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AppId">
            <summary>应用标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Secret">
            <summary>应用密钥</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Server">
            <summary>服务地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AccessServer">
            <summary>令牌服务地址。可以不同于验证地址的内网直达地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.GrantType">
            <summary>授权类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Scope">
            <summary>授权范围</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AuthUrl">
            <summary>验证地址。跳转SSO的验证地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AccessUrl">
            <summary>令牌地址。根据code换取令牌的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.UserUrl">
            <summary>用户地址。根据令牌获取用户信息的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AppUrl">
            <summary>应用地址。域名和端口，应用系统经过反向代理重定向时指定外部地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Debug">
            <summary>调试。设置处于调试状态，输出详细日志</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Visible">
            <summary>可见。是否在登录页面可见，不可见的提供者只能使用应用内自动登录，例如微信公众号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AutoRegister">
            <summary>自动注册。SSO登录后，如果本地没有匹配用户，自动注册新用户，否则跳到登录页，在登录后绑定</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.AutoRole">
            <summary>自动角色。该渠道登录的用户，将会自动得到指定角色名，多个角色逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Sort">
            <summary>排序。较大者在前面</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.SecurityKey">
            <summary>安全密钥。公钥，用于RSA加密用户密码，在通信链路上保护用户密码安全，密钥前面可以增加keyName，形成keyName$keyValue，用于向服务端指示所使用的密钥标识，方便未来更换密钥。</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.FieldMap">
            <summary>字段映射。SSO用户字段如何映射到OAuthClient内部属性</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.FetchAvatar">
            <summary>抓取头像。是否抓取头像并保存到本地</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.OAuthConfig.__">
            <summary>取得OAuth配置字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Name">
            <summary>名称。提供者名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Logo">
            <summary>图标</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AppId">
            <summary>应用标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Secret">
            <summary>应用密钥</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Server">
            <summary>服务地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AccessServer">
            <summary>令牌服务地址。可以不同于验证地址的内网直达地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.GrantType">
            <summary>授权类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Scope">
            <summary>授权范围</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AuthUrl">
            <summary>验证地址。跳转SSO的验证地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AccessUrl">
            <summary>令牌地址。根据code换取令牌的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.UserUrl">
            <summary>用户地址。根据令牌获取用户信息的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AppUrl">
            <summary>应用地址。域名和端口，应用系统经过反向代理重定向时指定外部地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Debug">
            <summary>调试。设置处于调试状态，输出详细日志</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Visible">
            <summary>可见。是否在登录页面可见，不可见的提供者只能使用应用内自动登录，例如微信公众号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AutoRegister">
            <summary>自动注册。SSO登录后，如果本地没有匹配用户，自动注册新用户，否则跳到登录页，在登录后绑定</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.AutoRole">
            <summary>自动角色。该渠道登录的用户，将会自动得到指定角色名，多个角色逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Sort">
            <summary>排序。较大者在前面</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.SecurityKey">
            <summary>安全密钥。公钥，用于RSA加密用户密码，在通信链路上保护用户密码安全，密钥前面可以增加keyName，形成keyName$keyValue，用于向服务端指示所使用的密钥标识，方便未来更换密钥。</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.FieldMap">
            <summary>字段映射。SSO用户字段如何映射到OAuthClient内部属性</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.FetchAvatar">
            <summary>抓取头像。是否抓取头像并保存到本地</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OAuthConfig.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.PrincipalAgent">
            <summary>委托代理。委托某人代理自己的用户权限，代理人下一次登录时将得到委托人的身份，一次有效</summary>
            <summary>委托代理。委托某人代理自己的用户权限，代理人下一次登录时将得到委托人的身份</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Principal">
            <summary>委托人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.PrincipalName">
            <summary>委托人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Agent">
            <summary>代理人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.AgentName">
            <summary>代理人</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.FindAllByPrincipalId(System.Int32)">
            <summary>根据委托人查找</summary>
            <param name="principalId">委托人</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.FindAllByAgentId(System.Int32)">
            <summary>根据代理人查找</summary>
            <param name="agentId">代理人</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.GetAllValidByAgentId(System.Int32)">
            <summary>根据代理人选择可用代理项</summary>
            <param name="agentId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.PrincipalAgent.Search(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="principalId">委托人。把自己的身份权限委托给别人</param>
            <param name="agentId">代理人。代理获得别人身份权限</param>
            <param name="start">更新时间开始</param>
            <param name="end">更新时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.PrincipalId">
            <summary>委托人。把自己的身份权限委托给别人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.AgentId">
            <summary>代理人。代理获得别人身份权限</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Times">
            <summary>次数。可用代理次数，0表示已用完，-1表示无限制</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Expire">
            <summary>有效期。截止时间之前有效，不设置表示无限制</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.PrincipalAgent.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.PrincipalAgent._">
            <summary>取得委托代理字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.PrincipalId">
            <summary>委托人。把自己的身份权限委托给别人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.AgentId">
            <summary>代理人。代理获得别人身份权限</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.Times">
            <summary>次数。可用代理次数，0表示已用完，-1表示无限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.Expire">
            <summary>有效期。截止时间之前有效，不设置表示无限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.PrincipalAgent.__">
            <summary>取得委托代理字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.PrincipalId">
            <summary>委托人。把自己的身份权限委托给别人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.AgentId">
            <summary>代理人。代理获得别人身份权限</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.Times">
            <summary>次数。可用代理次数，0表示已用完，-1表示无限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.Expire">
            <summary>有效期。截止时间之前有效，不设置表示无限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.PrincipalAgent.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.CronJob">
            <summary>定时作业。定时执行任务</summary>
            <summary>定时作业。定时执行任务</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.ToString">
            <summary>已重载。优先显示名</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.FindByName(System.String)">
            <summary>根据名称查找</summary>
            <param name="name">名称</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.Search(System.String,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="name">名称</param>
            <param name="start">更新时间开始</param>
            <param name="end">更新时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.Add(System.String,System.Reflection.MethodInfo,System.String,System.Boolean)">
            <summary>检查并添加定时作业</summary>
            <param name="name">作业名称。唯一</param>
            <param name="method">作业方法。定时执行</param>
            <param name="cron">Cron表达式。仅用于首次创建，后续可通过页面修改</param>
            <param name="enable">创建时是否启用。后续可通过页面修改</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.Add(System.String,System.Action{System.String},System.String,System.Boolean)">
            <summary>检查并添加定时作业</summary>
            <param name="name">作业名称。唯一</param>
            <param name="action">作业回调</param>
            <param name="cron">Cron表达式。仅用于首次创建，后续可通过页面修改</param>
            <param name="enable">创建时是否启用。后续可通过页面修改</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.GetArgument">
            <summary>获取参数对象。通过类型反射得到泛型参数</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.CronJob.WriteLog(System.String,System.Boolean,System.String)">
            <summary>写日志</summary>
            <param name="action"></param>
            <param name="success"></param>
            <param name="remark"></param>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Cron">
            <summary>Cron表达式。用于定时执行的Cron表达式</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Method">
            <summary>命令。ICubeJob类名或静态方法全名(包含一个String参数)</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Argument">
            <summary>参数。方法参数，时间日期、网址、SQL等</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Data">
            <summary>数据。作业运行中的小量数据，可传递给下一次作业执行，例如记录数据统计的时间点</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.EnableLog">
            <summary>启用日志</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.LastTime">
            <summary>最后时间。最后一次执行作业的时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.NextTime">
            <summary>下一次时间。下一次执行作业的时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.CronJob.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.CronJob._">
            <summary>取得定时作业字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Cron">
            <summary>Cron表达式。用于定时执行的Cron表达式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Method">
            <summary>命令。ICubeJob类名或静态方法全名(包含一个String参数)</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Argument">
            <summary>参数。方法参数，时间日期、网址、SQL等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Data">
            <summary>数据。作业运行中的小量数据，可传递给下一次作业执行，例如记录数据统计的时间点</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.EnableLog">
            <summary>启用日志</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.LastTime">
            <summary>最后时间。最后一次执行作业的时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.NextTime">
            <summary>下一次时间。下一次执行作业的时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.CronJob.__">
            <summary>取得定时作业字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Cron">
            <summary>Cron表达式。用于定时执行的Cron表达式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Method">
            <summary>命令。ICubeJob类名或静态方法全名(包含一个String参数)</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Argument">
            <summary>参数。方法参数，时间日期、网址、SQL等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Data">
            <summary>数据。作业运行中的小量数据，可传递给下一次作业执行，例如记录数据统计的时间点</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.EnableLog">
            <summary>启用日志</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.LastTime">
            <summary>最后时间。最后一次执行作业的时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.NextTime">
            <summary>下一次时间。下一次执行作业的时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.CronJob.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AppModule">
            <summary>应用插件。基于魔方实现的应用功能插件</summary>
            <summary>应用插件。基于魔方实现的应用功能插件</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.AppModule.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.AppModule.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Type">
            <summary>类型。.NET/Javascript/Lua</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.ClassName">
            <summary>类名。完整类名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.FilePath">
            <summary>文件。插件文件包，zip压缩</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.CreateUser">
            <summary>创建人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.UpdateUser">
            <summary>更新人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Remark">
            <summary>描述</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppModule.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.AppModule._">
            <summary>取得应用插件字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.Type">
            <summary>类型。.NET/Javascript/Lua</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.ClassName">
            <summary>类名。完整类名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.FilePath">
            <summary>文件。插件文件包，zip压缩</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.CreateUser">
            <summary>创建人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.UpdateUser">
            <summary>更新人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule._.Remark">
            <summary>描述</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AppModule.__">
            <summary>取得应用插件字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.Type">
            <summary>类型。.NET/Javascript/Lua</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.ClassName">
            <summary>类名。完整类名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.FilePath">
            <summary>文件。插件文件包，zip压缩</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.CreateUser">
            <summary>创建人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.UpdateUser">
            <summary>更新人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppModule.__.Remark">
            <summary>描述</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog">
            <summary>应用日志。用于OAuthServer的子系统</summary>
            <summary>应用日志。用于OAuthServer的子系统</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.App">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.AppName">
            <summary>应用</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.FindById(System.Int64)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.FindAllByAppId(System.Int32)">
            <summary>根据应用查找</summary>
            <param name="appId">应用</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.Search(System.Int32,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级搜索</summary>
            <param name="appId"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="key"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.Create(System.Int32,System.String,System.Boolean,System.String)">
            <summary>创建日志</summary>
            <param name="appid"></param>
            <param name="action"></param>
            <param name="success"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AppLog.DeleteBefore(System.DateTime)">
            <summary>删除指定日期之前的数据</summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.AppId">
            <summary>应用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Action">
            <summary>操作</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Success">
            <summary>成功</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.ClientId">
            <summary>应用标识</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Scope">
            <summary>授权域</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.State">
            <summary>状态数据</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateUser">
            <summary>创建者。可以是设备编码等唯一使用者标识</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AppLog.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog._">
            <summary>取得应用日志字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.AppId">
            <summary>应用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.ClientId">
            <summary>应用标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Scope">
            <summary>授权域</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.State">
            <summary>状态数据</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateUser">
            <summary>创建者。可以是设备编码等唯一使用者标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog._.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AppLog.__">
            <summary>取得应用日志字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.AppId">
            <summary>应用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Action">
            <summary>操作</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Success">
            <summary>成功</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.ClientId">
            <summary>应用标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.RedirectUri">
            <summary>回调地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.ResponseType">
            <summary>响应类型。默认code</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Scope">
            <summary>授权域</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.State">
            <summary>状态数据</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateUser">
            <summary>创建者。可以是设备编码等唯一使用者标识</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AppLog.__.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.App">
            <summary>应用系统</summary>
            <summary>应用系统。用于OAuthServer的子系统</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.App.Valid(System.Boolean)">
            <summary>验证数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ToString">
            <summary>已重载。显示系统名称</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindByName(System.String)">
            <summary>根据名称查找</summary>
            <param name="name">名称</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.FindBySecret(System.String)">
            <summary>根据密钥查找</summary>
            <param name="appkey">密钥</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ValidCallback(System.String)">
            <summary>验证回调地址</summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.ValidSource(System.String)">
            <summary>验证来源地址</summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.Valid(System.String)">
            <summary>验证应用密钥是否有效</summary>
            <param name="appkey"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.App.WriteLog(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>写应用历史</summary>
            <param name="action"></param>
            <param name="success"></param>
            <param name="remark"></param>
            <param name="ip"></param>
            <param name="clientId"></param>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Category">
            <summary>类别</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.HomePage">
            <summary>首页</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Logo">
            <summary>图标。附件路径</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.White">
            <summary>IP白名单。符合条件的来源IP才允许访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Black">
            <summary>IP黑名单。符合条件的来源IP禁止访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.TokenExpire">
            <summary>有效期。访问令牌AccessToken的有效期，单位秒，默认使用全局设置</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.RoleIds">
            <summary>授权角色。只允许这些角色登录该系统，多个角色逗号隔开，未填写时表示不限制</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Scopes">
            <summary>能力集合。逗号分隔，password，client_credentials</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.OAuths">
            <summary>三方OAuth。本系统作为OAuthServer时，该应用前来验证时可用的第三方OAuth提供商，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Expired">
            <summary>过期时间。空表示永不过期</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Auths">
            <summary>次数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.App.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.App._">
            <summary>取得应用系统字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Category">
            <summary>类别</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.HomePage">
            <summary>首页</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Logo">
            <summary>图标。附件路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.White">
            <summary>IP白名单。符合条件的来源IP才允许访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Black">
            <summary>IP黑名单。符合条件的来源IP禁止访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.TokenExpire">
            <summary>有效期。访问令牌AccessToken的有效期，单位秒，默认使用全局设置</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.RoleIds">
            <summary>授权角色。只允许这些角色登录该系统，多个角色逗号隔开，未填写时表示不限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Scopes">
            <summary>能力集合。逗号分隔，password，client_credentials</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.OAuths">
            <summary>三方OAuth。本系统作为OAuthServer时，该应用前来验证时可用的第三方OAuth提供商，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Expired">
            <summary>过期时间。空表示永不过期</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Auths">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.App.__">
            <summary>取得应用系统字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Name">
            <summary>名称。AppID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Secret">
            <summary>密钥。AppSecret</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Category">
            <summary>类别</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.HomePage">
            <summary>首页</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Logo">
            <summary>图标。附件路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.White">
            <summary>IP白名单。符合条件的来源IP才允许访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Black">
            <summary>IP黑名单。符合条件的来源IP禁止访问，支持*通配符，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.TokenExpire">
            <summary>有效期。访问令牌AccessToken的有效期，单位秒，默认使用全局设置</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Urls">
            <summary>回调地址。用于限制回调地址安全性，多个地址逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.RoleIds">
            <summary>授权角色。只允许这些角色登录该系统，多个角色逗号隔开，未填写时表示不限制</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Scopes">
            <summary>能力集合。逗号分隔，password，client_credentials</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.OAuths">
            <summary>三方OAuth。本系统作为OAuthServer时，该应用前来验证时可用的第三方OAuth提供商，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Expired">
            <summary>过期时间。空表示永不过期</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Auths">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.LastAuth">
            <summary>最后请求</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.App.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.OrderManager">
            <summary>指令管理</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.OrderManager.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.OrderManager.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OrderManager.FindByCode(System.String)">
            <summary>根据编号查询</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OrderManager.FindAllByCodes(System.Collections.Generic.List{System.String})">
            <summary>根据编号集合查询</summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.OrderManager.FindAllByCodes(System.String)">
            <summary></summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Name">
            <summary>指令名称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Code">
            <summary>指令编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.OptCategory">
            <summary>操作类型</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Data">
            <summary>数据,进行后续操作依赖值</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.DataType">
            <summary>数据类型,String、Int、Double、Decimal等</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Url">
            <summary>请求地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Method">
            <summary>请求方式,GET、POST、PUT、DELETE</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.ValueField">
            <summary>值字段</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.LabelField">
            <summary>文本字段</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.OrderManager.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.OrderManager._">
            <summary>取得指令管理字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Name">
            <summary>指令名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Code">
            <summary>指令编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.OptCategory">
            <summary>操作类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Data">
            <summary>数据,进行后续操作依赖值</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.DataType">
            <summary>数据类型,String、Int、Double、Decimal等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Url">
            <summary>请求地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Method">
            <summary>请求方式,GET、POST、PUT、DELETE</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.ValueField">
            <summary>值字段</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.LabelField">
            <summary>文本字段</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.OrderManager.__">
            <summary>取得指令管理字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Name">
            <summary>指令名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Code">
            <summary>指令编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.OptCategory">
            <summary>操作类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Data">
            <summary>数据,进行后续操作依赖值</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.DataType">
            <summary>数据类型,String、Int、Double、Decimal等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Url">
            <summary>请求地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Method">
            <summary>请求方式,GET、POST、PUT、DELETE</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.ValueField">
            <summary>值字段</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.LabelField">
            <summary>文本字段</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.CreateUserId">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.UpdateUserId">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.OrderManager.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserToken">
            <summary>用户令牌。授权其他人直接拥有指定用户的身份，支持有效期，支持数据接口</summary>
            <summary>用户令牌。授权指定用户访问接口数据，支持有效期</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.Valid(System.Boolean)">
            <summary>检查参数</summary>
            <param name="isNew"></param>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.User">
            <summary>用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.UserName">
            <summary>用户</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.FindByToken(System.String)">
            <summary>根据令牌查找</summary>
            <param name="token">令牌</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.FindAllByUserID(System.Int32)">
            <summary>根据用户查找</summary>
            <param name="userid">用户</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.Search(System.String,System.Int32,System.Nullable{System.Boolean},System.DateTime,System.DateTime,NewLife.Web.Pager)">
            <summary>高级查询</summary>
            <param name="token"></param>
            <param name="userid"></param>
            <param name="isEnable"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserToken.Valid(System.String,System.String)">
            <summary>验证token是否可用</summary>
            <param name="token"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Token">
            <summary>令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Url">
            <summary>地址。锁定该令牌只能访问该资源路径</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Times">
            <summary>次数。该令牌使用次数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.FirstIP">
            <summary>首次地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.FirstTime">
            <summary>首次时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.LastIP">
            <summary>最后地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.LastTime">
            <summary>最后时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserToken.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserToken._">
            <summary>取得用户令牌字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Token">
            <summary>令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Url">
            <summary>地址。锁定该令牌只能访问该资源路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Times">
            <summary>次数。该令牌使用次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.FirstIP">
            <summary>首次地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.FirstTime">
            <summary>首次时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.LastIP">
            <summary>最后地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.LastTime">
            <summary>最后时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken._.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserToken.__">
            <summary>取得用户令牌字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Token">
            <summary>令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Url">
            <summary>地址。锁定该令牌只能访问该资源路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Times">
            <summary>次数。该令牌使用次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.FirstIP">
            <summary>首次地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.FirstTime">
            <summary>首次时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.LastIP">
            <summary>最后地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.LastTime">
            <summary>最后时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserToken.__.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserOnline">
            <summary>用户在线</summary>
            <summary>用户在线</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.FindAllByUserID(System.Int32)">
            <summary>根据用户查找</summary>
            <param name="userId">用户</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.FindBySessionID(System.String,System.Boolean)">
            <summary>根据会话查找</summary>
            <param name="sessionId">会话</param>
            <param name="cache">是否从缓存查询</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.FindAllBySessionID(System.String)">
            <summary>根据会话查找</summary>
            <param name="sessionId">会话</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.Search(System.Int32,System.String,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="userId">用户</param>
            <param name="sessionId">会话。Web的SessionID或Server的会话编号</param>
            <param name="start">创建时间开始</param>
            <param name="end">创建时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserOnline.SetError(System.String)">
            <summary>
            设置错误
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.UserID">
            <summary>用户。当前登录人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Name">
            <summary>名称。当前登录人，或根据设备标识推算出来的使用人</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.SessionID">
            <summary>会话。Web的SessionID或Server的会话编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.OAuthProvider">
            <summary>登录方。OAuth提供商，从哪个渠道登录</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Times">
            <summary>次数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Page">
            <summary>页面</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Platform">
            <summary>平台。操作系统平台，Windows/Linux/Android等</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.OS">
            <summary>系统。操作系统，带版本</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Device">
            <summary>设备。手机品牌型号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Brower">
            <summary>浏览器。浏览器名称，带版本</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.NetType">
            <summary>网络。微信访问时，感知到WIFI或4G网络</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.DeviceId">
            <summary>设备标识。唯一标识设备，位于浏览器Cookie，重装后改变</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Status">
            <summary>状态</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.OnlineTime">
            <summary>在线时间。本次在线总时间，秒</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.LastError">
            <summary>最后错误</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Address">
            <summary>地址。根据IP计算</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.UpdateTime">
            <summary>修改时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserOnline.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserOnline._">
            <summary>取得用户在线字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.UserID">
            <summary>用户。当前登录人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Name">
            <summary>名称。当前登录人，或根据设备标识推算出来的使用人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.SessionID">
            <summary>会话。Web的SessionID或Server的会话编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.OAuthProvider">
            <summary>登录方。OAuth提供商，从哪个渠道登录</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Times">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Page">
            <summary>页面</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Platform">
            <summary>平台。操作系统平台，Windows/Linux/Android等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.OS">
            <summary>系统。操作系统，带版本</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Device">
            <summary>设备。手机品牌型号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Brower">
            <summary>浏览器。浏览器名称，带版本</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.NetType">
            <summary>网络。微信访问时，感知到WIFI或4G网络</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.DeviceId">
            <summary>设备标识。唯一标识设备，位于浏览器Cookie，重装后改变</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Status">
            <summary>状态</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.OnlineTime">
            <summary>在线时间。本次在线总时间，秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.LastError">
            <summary>最后错误</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.Address">
            <summary>地址。根据IP计算</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline._.UpdateTime">
            <summary>修改时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserOnline.__">
            <summary>取得用户在线字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.UserID">
            <summary>用户。当前登录人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Name">
            <summary>名称。当前登录人，或根据设备标识推算出来的使用人</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.SessionID">
            <summary>会话。Web的SessionID或Server的会话编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.OAuthProvider">
            <summary>登录方。OAuth提供商，从哪个渠道登录</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Times">
            <summary>次数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Page">
            <summary>页面</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Platform">
            <summary>平台。操作系统平台，Windows/Linux/Android等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.OS">
            <summary>系统。操作系统，带版本</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Device">
            <summary>设备。手机品牌型号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Brower">
            <summary>浏览器。浏览器名称，带版本</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.NetType">
            <summary>网络。微信访问时，感知到WIFI或4G网络</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.DeviceId">
            <summary>设备标识。唯一标识设备，位于浏览器Cookie，重装后改变</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Status">
            <summary>状态</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.OnlineTime">
            <summary>在线时间。本次在线总时间，秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.LastError">
            <summary>最后错误</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.Address">
            <summary>地址。根据IP计算</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserOnline.__.UpdateTime">
            <summary>修改时间</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserStat">
            <summary>用户统计</summary>
            <summary>用户统计</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserStat.Valid(System.Boolean)">
            <summary>验证并修补数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.UserStat.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserStat.FindByDate(System.DateTime,System.Boolean)">
            <summary>
            根据日期查找
            </summary>
            <param name="date"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserStat.SearchByDate(System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="start">统计日期开始</param>
            <param name="end">统计日期结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserStat.GetOrAdd(System.DateTime)">
            <summary>
            获取或添加指定天的统计
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Date">
            <summary>统计日期</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Total">
            <summary>总数。总用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Logins">
            <summary>登录数。总登录数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.OAuths">
            <summary>OAuth登录。OAuth总登录数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.MaxOnline">
            <summary>最大在线。最大在线用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Actives">
            <summary>活跃。今天活跃用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.ActivesT7">
            <summary>7天活跃。7天活跃用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.ActivesT30">
            <summary>30天活跃。30天活跃用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.News">
            <summary>新用户。今天注册新用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.NewsT7">
            <summary>7天注册。7天内注册新用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.NewsT30">
            <summary>30天注册。30天注册新用户数</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.OnlineTime">
            <summary>在线时间。累计在线总时间，秒</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserStat.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserStat._">
            <summary>取得用户统计字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.Date">
            <summary>统计日期</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.Total">
            <summary>总数。总用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.Logins">
            <summary>登录数。总登录数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.OAuths">
            <summary>OAuth登录。OAuth总登录数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.MaxOnline">
            <summary>最大在线。最大在线用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.Actives">
            <summary>活跃。今天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.ActivesT7">
            <summary>7天活跃。7天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.ActivesT30">
            <summary>30天活跃。30天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.News">
            <summary>新用户。今天注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.NewsT7">
            <summary>7天注册。7天内注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.NewsT30">
            <summary>30天注册。30天注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.OnlineTime">
            <summary>在线时间。累计在线总时间，秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat._.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserStat.__">
            <summary>取得用户统计字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.Date">
            <summary>统计日期</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.Total">
            <summary>总数。总用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.Logins">
            <summary>登录数。总登录数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.OAuths">
            <summary>OAuth登录。OAuth总登录数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.MaxOnline">
            <summary>最大在线。最大在线用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.Actives">
            <summary>活跃。今天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.ActivesT7">
            <summary>7天活跃。7天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.ActivesT30">
            <summary>30天活跃。30天活跃用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.News">
            <summary>新用户。今天注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.NewsT7">
            <summary>7天注册。7天内注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.NewsT30">
            <summary>30天注册。30天注册新用户数</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.OnlineTime">
            <summary>在线时间。累计在线总时间，秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserStat.__.Remark">
            <summary>详细信息</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect">
            <summary>用户链接。第三方绑定</summary>
            <summary>用户链接。第三方绑定</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.Valid(System.Boolean)">
            <summary>验证数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.User">
            <summary>用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UserName">
            <summary>用户</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindByID(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllByUnionId(System.String)">
            <summary>根据UnionID查找。跨多应用，因为微信公众号和微信开放平台可能共用UnionID</summary>
            <param name="unionId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindByProviderAndOpenID(System.String,System.String)">
            <summary>根据提供商、用户查找</summary>
            <param name="provider">提供商</param>
            <param name="openid">身份标识</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllByUserID(System.Int32)">
            <summary>根据用户查找</summary>
            <param name="userid">用户</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllByOpenID(System.String)">
            <summary>根据身份标识查找</summary>
            <param name="openId">身份标识</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllByDeviceId(System.String)">
            <summary>根据设备标识查找</summary>
            <param name="deviceId">设备标识</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.Search(System.String,System.Int32,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="provider"></param>
            <param name="userid"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="key"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.Fill(NewLife.Web.OAuthClient)">
            <summary>填充用户</summary>
            <param name="client"></param>
        </member>
        <member name="M:NewLife.Cube.Entity.UserConnect.FindAllProviderName">
            <summary>获取所有提供商名称</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.ID">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Provider">
            <summary>提供商</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UnionID">
            <summary>全局标识。跨应用统一</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.DeviceId">
            <summary>设备标识。企业微信用于唯一标识设备，重装后改变</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.UserConnect.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect._">
            <summary>取得用户链接字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UnionID">
            <summary>全局标识。跨应用统一</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.DeviceId">
            <summary>设备标识。企业微信用于唯一标识设备，重装后改变</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Avatar">
            <summary>头像</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect._.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.UserConnect.__">
            <summary>取得用户链接字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.ID">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Provider">
            <summary>提供商</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UserID">
            <summary>用户。本地用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.OpenID">
            <summary>身份标识。用户名、OpenID</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UnionID">
            <summary>全局标识。跨应用统一</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.LinkID">
            <summary>用户编号。第三方用户编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.NickName">
            <summary>昵称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.DeviceId">
            <summary>设备标识。企业微信用于唯一标识设备，重装后改变</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Avatar">
            <summary>头像</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.UserConnect.__.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AccessActionKinds">
            <summary>安全访问动作类型</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessActionKinds.Pass">
            <summary>放行</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessActionKinds.Block">
            <summary>拦截</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessActionKinds.Limit">
            <summary>限流</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.LimitDimensions">
            <summary>限流维度</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.LimitDimensions.IP">
            <summary>按IP</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.LimitDimensions.User">
            <summary>按用户</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AccessRule">
            <summary>访问规则。控制系统访问的安全访问规则，放行或拦截或限流</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.AccessRule.Valid(XCode.DataMethod)">
            <summary>验证并修补数据，返回验证结果，或者通过抛出异常的方式提示验证失败。</summary>
            <param name="method">添删改方法</param>
        </member>
        <member name="M:NewLife.Cube.Entity.AccessRule.InitData">
            <summary>首次连接数据库时初始化数据，仅用于实体类重载，用户不应该调用该方法</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.AccessRule.FindById(System.Int32)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AccessRule.FindByName(System.String)">
            <summary>根据名称查找</summary>
            <param name="name">名称</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.AccessRule.Search(System.String,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="name">名称</param>
            <param name="start">更新时间开始</param>
            <param name="end">更新时间结束</param>
            <param name="key">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Priority">
            <summary>优先级。较大优先</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Url">
            <summary>URL路径。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.UserAgent">
            <summary>用户代理。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.IP">
            <summary>来源IP。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.LoginedUser">
            <summary>登录用户。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.ActionKind">
            <summary>动作。放行/拦截/限流</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.BlockCode">
            <summary>拦截代码。拦截时返回Http代码，如404/500/302等</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.BlockContent">
            <summary>拦截内容。拦截时返回内容，返回302时此处调目标地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.LimitDimension">
            <summary>限流维度。IP/用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.LimitCycle">
            <summary>限流时间。限流时的考察时间，期间累加规则触发次数，如600秒</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.LimitTimes">
            <summary>限流次数。限流考察期间达到该阈值时，执行拦截</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Remark">
            <summary>内容</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.AccessRule.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.AccessRule._">
            <summary>取得访问规则字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Priority">
            <summary>优先级。较大优先</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Url">
            <summary>URL路径。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.UserAgent">
            <summary>用户代理。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.IP">
            <summary>来源IP。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.LoginedUser">
            <summary>登录用户。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.ActionKind">
            <summary>动作。放行/拦截/限流</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.BlockCode">
            <summary>拦截代码。拦截时返回Http代码，如404/500/302等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.BlockContent">
            <summary>拦截内容。拦截时返回内容，返回302时此处调目标地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.LimitDimension">
            <summary>限流维度。IP/用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.LimitCycle">
            <summary>限流时间。限流时的考察时间，期间累加规则触发次数，如600秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.LimitTimes">
            <summary>限流次数。限流考察期间达到该阈值时，执行拦截</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule._.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.AccessRule.__">
            <summary>取得访问规则字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Name">
            <summary>名称</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Priority">
            <summary>优先级。较大优先</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Url">
            <summary>URL路径。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.UserAgent">
            <summary>用户代理。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.IP">
            <summary>来源IP。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.LoginedUser">
            <summary>登录用户。支持*模糊匹配，多个逗号隔开</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.ActionKind">
            <summary>动作。放行/拦截/限流</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.BlockCode">
            <summary>拦截代码。拦截时返回Http代码，如404/500/302等</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.BlockContent">
            <summary>拦截内容。拦截时返回内容，返回302时此处调目标地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.LimitDimension">
            <summary>限流维度。IP/用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.LimitCycle">
            <summary>限流时间。限流时的考察时间，期间累加规则触发次数，如600秒</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.LimitTimes">
            <summary>限流次数。限流考察期间达到该阈值时，执行拦截</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.CreateUserID">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.UpdateUserID">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.AccessRule.__.Remark">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.Attachment">
            <summary>附件。用于记录各系统模块使用的文件</summary>
            <summary>附件。用于记录各系统模块使用的文件，可以是Local/NAS/OSS等</summary>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.Valid(System.Boolean)">
            <summary>验证数据，通过抛出异常的方式提示验证失败。</summary>
            <param name="isNew">是否插入</param>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.FindById(System.Int64)">
            <summary>根据编号查找</summary>
            <param name="id">编号</param>
            <returns>实体对象</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.FindAllByCategory(System.String)">
            <summary>根据分类查找</summary>
            <param name="category">分类</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.FindAllByCategoryAndKey(System.String,System.String)">
            <summary>根据分类和业务主键查找附件</summary>
            <param name="category">分类</param>
            <param name="key">业务主键</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.FindAllByFilePath(System.String)">
            <summary>根据路径查找</summary>
            <param name="filePath">路径</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.FindAllByExtension(System.String)">
            <summary>根据扩展名查找</summary>
            <param name="extension">扩展名</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.Search(System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,NewLife.Data.PageParameter)">
            <summary>高级查询</summary>
            <param name="category">分类</param>
            <param name="key">业务关键字</param>
            <param name="ext">扩展名</param>
            <param name="start">关键字</param>
            <param name="end">关键字</param>
            <param name="keyWord">关键字</param>
            <param name="page">分页参数信息。可携带统计和数据权限扩展查询等信息</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.GetCategoryList">
            <summary>获取分类列表，字段缓存10分钟，分组统计数据最多的前20种，用于魔方前台下拉选择</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.BuildFilePath(System.String)">
            <summary>
            生成文件路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.Fetch(System.String,System.String,System.String,System.Net.Http.HttpClient)">
            <summary>抓取附件</summary>
            <param name="url">远程地址</param>
            <param name="uploadPath">上传目录</param>
            <param name="filePath">文件名，如未指定则自动生成</param>
            <param name="client">指定定制化HttpClient，默认为空，由内部实例化。语雀SDK抓取附件时需要</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.SaveFile(System.IO.Stream,System.String,System.String)">
            <summary>保存单个文件</summary>
            <param name="stream">文件</param>
            <param name="uploadPath">上传目录，默认使用UploadPath配置</param>
            <param name="filePath">文件名，如未指定则自动生成</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Entity.Attachment.GetFilePath(System.String)">
            <summary>获取文件路径，用于读取附件</summary>
            <param name="uploadPath"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Category">
            <summary>业务分类</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Key">
            <summary>业务主键</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Title">
            <summary>标题。业务内容作为附件标题，便于查看管理</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.FileName">
            <summary>文件名。原始文件名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Extension">
            <summary>扩展名</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Size">
            <summary>文件大小</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.ContentType">
            <summary>内容类型。用于Http响应</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.FilePath">
            <summary>路径。本地相对路径或OSS路径，本地相对路径加上附件目录的配置，方便整体转移附件</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Hash">
            <summary>哈希。MD5</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Enable">
            <summary>启用</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.UploadTime">
            <summary>上传时间。附件上传时间，可用于构造文件存储路径</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Url">
            <summary>网址。链接到附件所在信息页的地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Source">
            <summary>来源。用于远程抓取的附件来源地址，本地文件不存在时自动依次抓取</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.CreateUser">
            <summary>创建者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.UpdateUser">
            <summary>更新者</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Remark">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Entity.Attachment.Item(System.String)">
            <summary>获取/设置 字段值</summary>
            <param name="name">字段名</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Entity.Attachment._">
            <summary>取得附件字段信息的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Category">
            <summary>业务分类</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Key">
            <summary>业务主键</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Title">
            <summary>标题。业务内容作为附件标题，便于查看管理</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.FileName">
            <summary>文件名。原始文件名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Extension">
            <summary>扩展名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Size">
            <summary>文件大小</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.ContentType">
            <summary>内容类型。用于Http响应</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.FilePath">
            <summary>路径。本地相对路径或OSS路径，本地相对路径加上附件目录的配置，方便整体转移附件</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Hash">
            <summary>哈希。MD5</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.UploadTime">
            <summary>上传时间。附件上传时间，可用于构造文件存储路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Url">
            <summary>网址。链接到附件所在信息页的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Source">
            <summary>来源。用于远程抓取的附件来源地址，本地文件不存在时自动依次抓取</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.CreateUser">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.UpdateUser">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment._.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.Entity.Attachment.__">
            <summary>取得附件字段名称的快捷方式</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Id">
            <summary>编号</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Category">
            <summary>业务分类</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Key">
            <summary>业务主键</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Title">
            <summary>标题。业务内容作为附件标题，便于查看管理</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.FileName">
            <summary>文件名。原始文件名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Extension">
            <summary>扩展名</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Size">
            <summary>文件大小</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.ContentType">
            <summary>内容类型。用于Http响应</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.FilePath">
            <summary>路径。本地相对路径或OSS路径，本地相对路径加上附件目录的配置，方便整体转移附件</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Hash">
            <summary>哈希。MD5</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Enable">
            <summary>启用</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.UploadTime">
            <summary>上传时间。附件上传时间，可用于构造文件存储路径</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Url">
            <summary>网址。链接到附件所在信息页的地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Source">
            <summary>来源。用于远程抓取的附件来源地址，本地文件不存在时自动依次抓取</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.TraceId">
            <summary>追踪。链路追踪，用于APM性能追踪定位，还原该事件的调用链</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.CreateUser">
            <summary>创建者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.CreateUserID">
            <summary>创建用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.CreateIP">
            <summary>创建地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.CreateTime">
            <summary>创建时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.UpdateUser">
            <summary>更新者</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.UpdateUserID">
            <summary>更新用户</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.UpdateIP">
            <summary>更新地址</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.UpdateTime">
            <summary>更新时间</summary>
        </member>
        <member name="F:NewLife.Cube.Entity.Attachment.__.Remark">
            <summary>备注</summary>
        </member>
        <member name="T:NewLife.Cube.PagerHelper">
            <summary>页面助手</summary>
        </member>
        <member name="T:NewLife.Cube.PagerHelper.__">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.Sort">
            <summary>排序字段</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.Desc">
            <summary>是否降序</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.PageIndex">
            <summary>页面索引</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper.__.PageSize">
            <summary>页面大小</summary>
        </member>
        <member name="F:NewLife.Cube.PagerHelper._">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="M:NewLife.Cube.PagerHelper.GetFormAction(NewLife.Web.Pager,System.String)">
            <summary>获取表单提交的Url</summary>
            <param name="pager">页面</param>
            <param name="action">动作</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.PagerHelper.FilterSpecialChar(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>过滤特殊字符，避免注入</summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Extensions.RequestHelper">
            <summary>请求助手类</summary>
        </member>
        <member name="M:NewLife.Cube.Extensions.RequestHelper.GetRequestValue(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            从请求中获取值
            </summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Extensions.RequestHelper.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            确定指定的HTTP请求是否是Ajax请求
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Extensions.RequestHelper.GetRequestBody``1(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求中的body对象，第一次解析后存储在HttpContext.Items["RequestBody"]中
            </summary>
            <param name="request"></param>
            <remarks>如果类型是Object，返回的类型则是<see cref="T:NewLife.Collections.NullableDictionary`2"/></remarks>
        </member>
        <member name="M:NewLife.Cube.Extensions.RequestHelper.GetRequestBody(Microsoft.AspNetCore.Http.HttpRequest,System.Type)">
            <summary>
            获取请求主体部分
            </summary>
            <param name="request"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ManageProvider2">
            <inheritdoc />
        </member>
        <member name="P:NewLife.Cube.ManageProvider2.SessionKey">
            <summary>保存于Session的凭证</summary>
        </member>
        <member name="M:NewLife.Cube.ManageProvider2.GetCurrent(System.IServiceProvider)">
            <summary>获取当前用户</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManageProvider2.SetCurrent(NewLife.Model.IManageUser,System.IServiceProvider)">
            <summary>设置当前用户</summary>
            <param name="user"></param>
            <param name="context"></param>
        </member>
        <member name="M:NewLife.Cube.ManageProvider2.Login(System.String,System.String,System.Boolean)">
            <summary>登录</summary>
            <param name="name"></param>
            <param name="password"></param>
            <param name="remember">是否记住密码</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManageProvider2.CheckAgent(NewLife.Model.IManageUser)">
            <summary>检查委托代理</summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManageProvider2.Logout">
            <summary>注销</summary>
        </member>
        <member name="T:NewLife.Cube.Membership.MenuHelper">
            <summary>
            菜单助手
            </summary>
        </member>
        <member name="M:NewLife.Cube.Membership.MenuHelper.ScanController(XCode.Membership.IMenuFactory,System.String,System.Type)">
            <summary>扫描命名空间下的控制器并添加为菜单</summary>
            <param name="menuFactory">菜单工厂</param>
            <param name="rootName">根菜单名称，所有菜单附属在其下</param>
            <param name="areaType">区域类型</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Membership.MenuHelper.ScanActionMenu(System.Type,XCode.Membership.IMenu)">
            <summary>获取可用于生成权限菜单的Action集合</summary>
            <param name="controllerType">控制器类型</param>
            <param name="menu">该控制器所在菜单</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Models.TokenInModel">
            <summary>访问令牌输入参数</summary>
        </member>
        <member name="P:NewLife.Cube.Models.TokenInModel.grant_type">
            <summary>授权类型</summary>
        </member>
        <member name="P:NewLife.Cube.Models.TokenInModel.UserName">
            <summary>用户名</summary>
        </member>
        <member name="P:NewLife.Cube.Models.TokenInModel.Password">
            <summary>密码</summary>
        </member>
        <member name="P:NewLife.Cube.Models.TokenInModel.ClientId">
            <summary>客户端唯一标识。一般是IP@进程</summary>
        </member>
        <member name="P:NewLife.Cube.Models.TokenInModel.refresh_token">
            <summary>刷新令牌</summary>
        </member>
        <member name="T:NewLife.Cube.Services.TokenService">
            <summary>应用服务</summary>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.Authorize(System.String,System.String,System.Boolean,System.String)">
            <summary>验证应用密码，不存在时新增</summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="autoRegister"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.IssueToken(System.String,System.String,System.Int32,System.String)">
            <summary>颁发令牌</summary>
            <param name="name"></param>
            <param name="secret"></param>
            <param name="expire"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.ValidAndIssueToken(System.String,System.String,System.String,System.Int32)">
            <summary>验证并续发新令牌，过期前10分钟才能续发</summary>
            <param name="name"></param>
            <param name="token"></param>
            <param name="secret"></param>
            <param name="expire"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.DecodeTokenWithError(System.String,System.String)">
            <summary>解码令牌</summary>
            <param name="token"></param>
            <param name="tokenSecret"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.DecodeToken(System.String,System.String)">
            <summary>解码令牌，得到App应用</summary>
            <param name="token"></param>
            <param name="tokenSecret"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.TokenService.TryDecodeToken(System.String,System.String)">
            <summary>解码令牌</summary>
            <param name="token"></param>
            <param name="tokenSecret"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Services.AccessService">
            <summary>安全访问规则服务</summary>
        </member>
        <member name="M:NewLife.Cube.Services.AccessService.#ctor(NewLife.Caching.ICacheProvider,NewLife.Log.ITracer)">
            <summary>实例化安全访问服务</summary>
            <param name="cacheProvider"></param>
            <param name="tracer"></param>
        </member>
        <member name="M:NewLife.Cube.Services.AccessService.Valid(System.String,NewLife.Cube.Web.UserAgentParser,System.String,XCode.Membership.IUser,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>验证是否允许当前请求访问</summary>
            <param name="url"></param>
            <param name="ua"></param>
            <param name="ip"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.AccessService.ResetLimit(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>解除限制</summary>
            <param name="session"></param>
        </member>
        <member name="T:NewLife.Cube.Services.DataRetentionService">
            <summary>数据保留服务</summary>
        </member>
        <member name="M:NewLife.Cube.Services.DataRetentionService.#ctor(NewLife.Cube.CubeSetting,NewLife.Log.ITracer)">
            <summary>实例化数据保留服务</summary>
            <param name="setting"></param>
            <param name="tracer"></param>
        </member>
        <member name="M:NewLife.Cube.Services.DataRetentionService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            开始
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.DataRetentionService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            停止
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Services.DbDataProtectionBuilderExtensions">
            <summary>Redis数据保护扩展</summary>
        </member>
        <member name="M:NewLife.Cube.Services.DbDataProtectionBuilderExtensions.PersistKeysToDb(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)">
            <summary>存储数据保护Key到Redis，自动识别已注入到容器的FullRedis或Redis单例</summary>
            <param name="builder"></param>
            <param name="key"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:NewLife.Cube.Services.DbXmlRepository">
            <summary>在数据库中存储Xml</summary>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.#ctor(System.String)">
            <summary>实例化</summary>
            <param name="key"></param>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.Dispose(System.Boolean)">
            <summary>销毁</summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.GetAllElements">
            <summary>获取所有元素</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.GetAllElementsCore">
            <summary>遍历元素</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)">
            <summary>存储元素</summary>
            <param name="element"></param>
            <param name="friendlyName"></param>
        </member>
        <member name="M:NewLife.Cube.Services.DbXmlRepository.TrimExpired(System.Object)">
            <summary>自动删除已过期的key</summary>
            <param name="state"></param>
        </member>
        <member name="T:NewLife.Cube.Services.JobServiceExtersions">
            <summary>作业扩展</summary>
        </member>
        <member name="M:NewLife.Cube.Services.JobServiceExtersions.AddCubeJob(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>启用魔方CronJob</summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Services.JobService">
            <summary>定时作业服务</summary>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.#ctor(System.IServiceProvider,NewLife.Log.ITracer)">
            <summary>实例化作业服务</summary>
            <param name="serviceProvider"></param>
            <param name="tracer"></param>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.StartAsync(System.Threading.CancellationToken)">
            <summary>启动</summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.StopAsync(System.Threading.CancellationToken)">
            <summary>停止</summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.Wake">
            <summary>唤醒作业调度，作业配置有变更</summary>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.Wake(System.Int32,System.Int32)">
            <summary>唤醒具体作业</summary>
            <param name="jobId"></param>
            <param name="ms"></param>
        </member>
        <member name="M:NewLife.Cube.Services.JobService.ScanJobs">
            <summary>扫描并添加ICubeJob作业</summary>
        </member>
        <member name="T:NewLife.Cube.Services.MyJob">
            <summary>定时作业项</summary>
        </member>
        <member name="T:NewLife.Cube.Services.PasswordService">
            <summary>
            密码服务
            </summary>
        </member>
        <member name="M:NewLife.Cube.Services.PasswordService.Valid(System.String)">
            <summary>验证密码强度</summary>
            <param name="password"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:NewLife.Cube.Services.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:NewLife.Cube.Services.UserService.#ctor(System.IServiceProvider)">
            <summary>
            实例化用户服务
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:NewLife.Cube.Services.UserService.SetStatus(NewLife.Cube.Entity.UserOnline,System.String,System.String,System.String,System.String,NewLife.Cube.Web.UserAgentParser,System.Int32,System.String,System.String)">
            <summary>设置会话状态</summary>
            <param name="online"></param>
            <param name="sessionId"></param>
            <param name="deviceId"></param>
            <param name="page"></param>
            <param name="status"></param>
            <param name="userAgent"></param>
            <param name="userid"></param>
            <param name="name"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.UserService.SetWebStatus(NewLife.Cube.Entity.UserOnline,System.String,System.String,System.String,System.String,NewLife.Cube.Web.UserAgentParser,XCode.Membership.IUser,System.String)">
            <summary>设置网页会话状态</summary>
            <param name="online"></param>
            <param name="sessionId"></param>
            <param name="deviceId"></param>
            <param name="page"></param>
            <param name="status"></param>
            <param name="userAgent"></param>
            <param name="user"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.UserService.ClearExpire(System.Int32)">
            <summary>删除过期，指定过期时间</summary>
            <param name="secTimeout">超时时间，20 * 60秒</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Services.UserService.ClearOnline(XCode.Membership.User)">
            <summary>
            注销用户时，更新在线表和统计表
            </summary>
            <param name="user"></param>
        </member>
        <member name="T:NewLife.Cube.Setting">
            <summary>魔方设置</summary>
        </member>
        <member name="T:NewLife.Cube.CubeSetting">
            <summary>魔方设置</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.Debug">
            <summary>是否启用调试。默认true</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ShowRunTime">
            <summary>显示运行时间</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.AvatarPath">
            <summary>头像目录。设定后下载远程头像到本地，默认Avatars子目录，web上一级Avatars。清空表示不抓取</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.UploadPath">
            <summary>上传目录。默认Uploads</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.WebRootPath">
            <summary>静态资源目录。默认wwwroot</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ResourceUrl">
            <summary>资源地址。指向CDN，如 https://sso.newlifex.com/content/，留空表示使用本地</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.CorsOrigins">
            <summary>跨域来源。允许其它源访问当前域，指定其它源http地址，*表示任意域</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.XFrameOptions">
            <summary>在iframe中展示。SAMEORIGIN-允许相同域名，ALLOWALL-允许任何域名</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.SameSiteMode">
            <summary>Cookie模式。token的cookies默认模式（ -1 Unspecified，0 None，1 Lax，2 Strict）</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.CookieDomain">
            <summary>Cookie域名。可用于把Cookie写到顶级域名，默认为空写当前域。写顶级域要求https，同时会导致普通http无法在本地域写同名键值</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ShareExpire">
            <summary>分享有效期。分享令牌的有效期，默认7200秒</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.RobotError">
            <summary>机器人错误码。设置后拦截各种爬虫并返回相应错误，如404/500，默认0不拦截</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceRedirect">
            <summary>强制跳转。指定目标schema和host，在GET访问发现不一致时强制跳转，host支持*。常用于强制跳转https，如https://*:8081</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.DefaultRole">
            <summary>默认角色。默认普通用户</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.AllowLogin">
            <summary>允许密码登录。允许输入用户名密码进行登录</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.AllowRegister">
            <summary>允许注册。允许输入用户名密码进行注册</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.AutoRegister">
            <summary>自动注册。默认true，SSO登录后，如果本地未登录，自动注册新用户。全局设置和OAuth应用设置只要有一个启用则表示使用</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.PaswordStrength">
            <summary>密码强度。*表示无限制，默认8位起，数字大小写字母和符号</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.MaxLoginError">
            <summary>登录失败次数。短时间内，相同用户或IP地址连续登录错误次数达到该值后禁止登录，默认5</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.LoginForbiddenTime">
            <summary>登录失败次数。短时间内，相同用户或IP地址连续登录错误次数达到该值后禁止登录，默认5</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceBindUser">
            <summary>强行绑定用户名。根据SSO用户名强制绑定本地同名用户，而不需要增加提供者前缀，一般用于用户中心</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceBindUserCode">
            <summary>绑定用户代码。根据SSO用户代码强制绑定本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceBindUserMobile">
            <summary>绑定用户手机。根据SSO用户手机强制绑定本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceBindUserMail">
            <summary>绑定用户邮箱。根据SSO用户邮箱强制绑定本地用户</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.ForceBindNickName">
            <summary>绑定用户昵称。根据SSO用户昵称强制绑定本地用户，内部SSO可用，不建议用于社交网络，重名太多</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.UseSsoRole">
            <summary>使用Sso角色。SSO登录后继续使用SSO角色，默认true；否则使用DefaultRole</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.UseSsoDepartment">
            <summary>使用Sso部门。SSO登录后继续使用SSO部门，默认true</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.LogoutAll">
            <summary>注销所有系统。false仅注销本系统，默认true时注销SsoServer</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.SessionTimeout">
            <summary>会话超时。单点登录后会话超时时间，该时间内可借助Cookie登录，默认0s</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.RefreshUserPeriod">
            <summary>刷新用户周期。该周期内多次SSO登录只拉取一次用户信息，默认600秒</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.JwtSecret">
            <summary>JWT密钥。用于生成JWT令牌的算法和密钥，如HS256:ABCD1234</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.TokenExpire">
            <summary>令牌有效期。访问令牌AccessToken的有效期，默认7200秒</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.StartPage">
            <summary>工作台页面。进入后台的第一个内容页</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.Theme">
            <summary>主题样式。每一个内容页，ACE/layui</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.Skin">
            <summary>首页皮肤。最外层框架页，ACE/layui</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.LoginTip">
            <summary>登录提示。留空表示不显示登录提示信息</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.FormGroupClass">
            <summary>表单组样式。大中小屏幕分别3/2/1列</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.BootstrapSelect">
            <summary>下拉选择框。使用Bootstrap，美观，但有呈现方面的性能损耗</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.MaxDropDownList">
            <summary>最大下拉个数。表单页关联下拉列表最大允许个数，默认50，超过时显示文本数字框</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.Copyright">
            <summary>版权。留空表示不显示版权信息</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.Registration">
            <summary>备案号。留空表示不显示备案信息</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EnableNewUI">
            <summary>启用新UI</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EChartsTheme">
            <summary>ECharts主题。图表样式主题</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.TitlePrefix">
            <summary>标题后缀。在页面标题后面加上系统名称，默认true</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EnableTableDoubleClick">
            <summary>双击事件禁用。列表页表格行双击事件禁用，默认true(启用)</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.StarWeb">
            <summary>星尘Web。星尘控制台地址，支持直达调用链 /trace?id={traceId} 或 /graph?id={traceId}</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EnableTenant">
            <summary>多租户。是否支持多租户，租户模式禁止访问系统管理，平台管理模式禁止访问租户页面</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EnableUserOnline">
            <summary>用户在线。是否记录用户在线信息，0表示不记录，1表示仅记录已登录用户，2表示记录所有访客。默认2</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.EnableUserStat">
            <summary>用户统计。是否统计用户访问，默认true</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.DataRetention">
            <summary>数据保留时间。审计日志与OAuth日志，默认30天</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.FileRetention">
            <summary>文件保留时间。备份文件保留时间，默认15天</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.FileRetentionSize">
            <summary>保留文件大小。小于该大小的文件将不会被删除，即使超过保留时间，单位K字节，默认1024K</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.MaxExport">
            <summary>最大导出行数。页面允许导出的最大行数，默认10_000_000</summary>
        </member>
        <member name="P:NewLife.Cube.CubeSetting.MaxBackup">
            <summary>最大备份行数。页面允许备份的最大行数，默认10_000_000</summary>
        </member>
        <member name="M:NewLife.Cube.CubeSetting.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.CubeSetting.OnLoaded">
            <summary>加载时触发</summary>
        </member>
        <member name="T:NewLife.Cube.WebMiddleware.RunTimeMiddleware">
            <summary>运行时中间件。页面查询执行时间、异常拦截</summary>
        </member>
        <member name="F:NewLife.Cube.WebMiddleware.RunTimeMiddleware._sessionProvider">
            <summary>会话提供者</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.RunTimeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,NewLife.Cube.Services.UserService,NewLife.Cube.Services.AccessService)">
            <summary>实例化</summary>
            <param name="next"></param>
            <param name="userService"></param>
            <param name="accessService"></param>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.RunTimeMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>调用</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeMiddleware.DbRunTimeFormat">
            <summary>执行时间字符串</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.RunTimeMiddleware.GetInfo(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>获取执行时间和查询次数等信息</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeMiddleware.ExcludeSuffixes">
            <summary>忽略的后缀</summary>
        </member>
        <member name="T:NewLife.Cube.WebMiddleware.RunTimeInfo">
            <summary>运行时间信息</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeInfo.QueryTimes">
            <summary>查询次数</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeInfo.ExecuteTimes">
            <summary>执行次数</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeInfo.Watch">
            <summary>执行耗时</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.RunTimeInfo.Sqls">
            <summary>查询次数</summary>
        </member>
        <member name="T:NewLife.Cube.WebMiddleware.MiddlewareHelper">
            <summary>中间件助手</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.MiddlewareHelper.CheckForceRedirect(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>检查是否强制跳转</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.WebMiddleware.TenantMiddleware">
            <summary>租户中间件。设置租户上下文</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.TenantMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>实例化</summary>
            <param name="next"></param>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.TenantMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>调用</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.WebMiddleware.TracerMiddleware">
            <summary>性能跟踪中间件</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.TracerMiddleware.Tracer">
            <summary>跟踪器</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.TracerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>实例化</summary>
            <param name="next"></param>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.TracerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>调用</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.TracerMiddleware.TagTypes">
            <summary>支持作为标签数据的内容类型</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.TracerMiddleware.ExcludeHeaders">
            <summary>忽略的头部</summary>
        </member>
        <member name="P:NewLife.Cube.WebMiddleware.TracerMiddleware.ExcludeSuffixes">
            <summary>忽略的后缀</summary>
        </member>
        <member name="M:NewLife.Cube.WebMiddleware.TracerMiddleware.SaveServiceAddress(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>自动记录用户访问主机地址</summary>
            <param name="ctx"></param>
        </member>
        <member name="T:NewLife.Cube.Web.AttachmentProvider">
            <summary>附件提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.AttachmentProvider.Provider">
            <summary>默认提供者</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.ApprovalInfo">
            <summary>审批信息</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.No">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Status">
            <summary>状态</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.TemplateId">
            <summary>模板</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.ApplyTime">
            <summary>申请时间</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Applyer">
            <summary>申请者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Record">
            <summary>记录</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Notifyer">
            <summary>通知人</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.ApplyData">
            <summary>申请数据</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.ApprovalInfo.Comments">
            <summary>备注</summary>
        </member>
        <member name="M:NewLife.Cube.Web.Models.ApprovalInfo.ToString">
            <summary>已重载。显示名称</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.Models.ApprovalInfo.GetPunchCorrection">
            <summary>获取补卡数据</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.Models.ApplyerInfo">
            <summary>申请人</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.ContentData">
            <summary>内容</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.PunchCorrection">
            <summary>补卡</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.PunchCorrection.UserId">
            <summary>用户标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.PunchCorrection.Title">
            <summary>标题</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.PunchCorrection.Time">
            <summary>时间</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.PunchCorrection.State">
            <summary>状态</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.PunchCorrection.Reason">
            <summary>原因</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.CheckInData">
            <summary>打卡记录</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.UserId">
            <summary>用户标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.GroupName">
            <summary>打卡组</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.CheckInType">
            <summary>打开类型。上班打卡、下班打卡、外出打卡</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.ExceptionType">
            <summary>异常类型</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.CheckInTime">
            <summary>打卡时间</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.LocationTitle">
            <summary>位置标题</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.LocationDetail">
            <summary>位置明细</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.Latitude">
            <summary>纬度</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.Longitude">
            <summary>经度</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.DeviceId">
            <summary>设备</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.WifiName">
            <summary>Wifi名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.WifiMac">
            <summary>Wifi的MAC地址</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.Notes">
            <summary>备注</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.MediaIds">
            <summary>相片媒体</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.ScheduleCheckInTime">
            <summary>计划打卡时间</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.GroupId">
            <summary>考勤组</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.ScheduleId">
            <summary>计划标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.CheckInData.TimelineId">
            <summary>考勤段</summary>
        </member>
        <member name="M:NewLife.Cube.Web.Models.CheckInData.ToString">
            <summary>已重载。</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.DepartmentInfo">
            <summary>部门信息</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.DepartmentInfo.Id">
            <summary>编号</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.DepartmentInfo.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.DepartmentInfo.EnglishName">
            <summary>英文名</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.DepartmentInfo.ParentId">
            <summary>父级部门。根部门1</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.DepartmentInfo.Order">
            <summary>顺序</summary>
        </member>
        <member name="M:NewLife.Cube.Web.Models.DepartmentInfo.ToString">
            <summary>已重载。显示名称</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.Models.OAuthFieldMap">
            <summary>
            OAuth配置字段映射
            </summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.OpenID">
            <summary>统一标识。当前应用下唯一</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.UnionID">
            <summary>企业级标识。当前企业所有应用下唯一</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.UserID">
            <summary>用户ID</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.UserName">
            <summary>用户名</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.Sex">
            <summary>性别。0未知，1男，2女</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.UserCode">
            <summary>用户代码</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.DepartmentCode">
            <summary>部门代码，唯一标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.DepartmentName">
            <summary>部门名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.ParentDepartmentCode">
            <summary>父级部门代码，唯一标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.ParentDepartmentName">
            <summary>父级部门名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.Mobile">
            <summary>手机</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.Mail">
            <summary>邮箱</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.Detail">
            <summary>明细。用户个人描述，座右铭等</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.DeviceId">
            <summary>设备标识。</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.OAuthFieldMap.AreaId">
            <summary>地区</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.SsoTokenModel">
            <summary>Sso令牌模型</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.SsoTokenModel.client_id">
            <summary>应用标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.SsoTokenModel.client_secret">
            <summary>应用密钥</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.SsoTokenModel.UserName">
            <summary>用户名。可以是设备编码等唯一使用者标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.SsoTokenModel.Password">
            <summary>密码</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.SsoTokenModel.grant_type">
            <summary>授权类型</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.TokenInfo">
            <summary>令牌信息</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.TokenInfo.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.TokenInfo.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.TokenInfo.Expire">
            <summary>有效期。单位秒</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.TokenInfo.Scope">
            <summary>作用域</summary>
        </member>
        <member name="T:NewLife.Cube.Web.Models.UserInfo">
            <summary>用户信息</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Id">
            <summary>标识userid</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Mobile">
            <summary>手机</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Department">
            <summary>部门</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Order">
            <summary>顺序</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Position">
            <summary>岗位</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Gender">
            <summary>性别</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Mail">
            <summary>邮箱</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.IsLeader">
            <summary>是否部门领导</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Telephone">
            <summary>电话</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Alias">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Status">
            <summary>状态</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.Address">
            <summary>地址</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.OpenId">
            <summary>开放平台标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.Models.UserInfo.MainDepartment">
            <summary>主要部门</summary>
        </member>
        <member name="M:NewLife.Cube.Web.Models.UserInfo.ToString">
            <summary>已重载。显示姓名</summary>
        </member>
        <member name="T:NewLife.Cube.Web.OAuthHelper">
            <summary>开放验证助手</summary>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthHelper.GetLoginUrl(System.String,System.String)">
            <summary>获取登录地址</summary>
            <param name="name"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.OAuthHelper.GetUrl(System.String,System.String)">
            <summary>合并Url</summary>
            <param name="baseUrl"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.DingTalkClient">
            <summary>钉钉身份验证提供者</summary>
            <remarks>
            平台 https://open-dev.dingtalk.com/
            </remarks>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.Apply(NewLife.Cube.Entity.OAuthConfig)">
            <summary>应用参数</summary>
            <param name="mi"></param>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.SetMode(System.String)">
            <summary>设置工作模式</summary>
            <param name="mode"></param>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.Support(System.String)">
            <summary>是否支持指定用户端，也就是判断是否在特定应用内打开，例如QQ/DingDing/WeiXin</summary>
            <remarks>
            Mozilla/5.0 (Linux; U; Android 10; zh-CN; YAL-AL10 Build/HUAWEIYAL-AL10) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 UWS/3.22.0.36 Mobile Safari/537.36 AliApp(DingTalk/6.0.7) com.alibaba.android.rimet/14599822 Channel/227200 language/zh-CN UT4Aplus/0.2.25 colorScheme/light
            </remarks>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.Init(System.String)">
            <summary>针对指定客户端进行初始化</summary>
            <param name="userAgent"></param>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.GetAccessToken(System.String)">
            <summary>获取令牌</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.GetUserInfo">
            <summary>获取用户信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.GetToken(System.String,System.String)">
            <summary>企业内部应用获取凭证，有效期7200秒</summary>
            <param name="appkey"></param>
            <param name="appsecret"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.GetUserInfo(System.String,System.String)">
            <summary>企业内部应用获取用户信息</summary>
            <param name="access_token"></param>
            <param name="userid">员工id</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.DingTalkClient.GetUseridByUnionid(System.String,System.String)">
            <summary>根据unionid获取userid</summary>
            <param name="access_token"></param>
            <param name="unionId">员工在当前开发者企业账号范围内的唯一标识，系统生成，固定值，不会改变</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.SsoClient">
            <summary>SSO客户端</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoClient.Server">
            <summary>服务器</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoClient.AppId">
            <summary>应用标识</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoClient.Secret">
            <summary>应用密钥</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoClient.SecurityKey">
            <summary>安全密钥。keyName$keyValue</summary>
            <remarks>
            公钥，用于RSA加密用户密码，在通信链路上保护用户密码安全，可以写死在代码里面。
            密钥前面可以增加keyName，形成keyName$keyValue，用于向服务端指示所使用的密钥标识，方便未来更换密钥。
            </remarks>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.GetToken(System.String,System.String)">
            <summary>密码式，验证账号密码，并返回令牌</summary>
            <param name="username">账号</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.GetToken(System.String)">
            <summary>凭证式，为指定设备颁发令牌</summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.RefreshToken(System.String)">
            <summary>刷新令牌</summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.GetUserInfo(System.String)">
            <summary>通过令牌获取用户信息</summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.GetUser(System.String)">
            <summary>通过令牌获取用户信息</summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.UserAuth(System.String,System.String)">
            <summary>验证用户，并获取用户信息</summary>
            <param name="username">账号</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoClient.GetKey(System.String,System.String)">
            <summary>获取应用公钥，用于验证令牌</summary>
            <param name="client_id">应用</param>
            <param name="client_secret">密钥</param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.SsoProvider">
            <summary>单点登录提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.Provider">
            <summary>用户管理提供者</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.Tracer">
            <summary>
            性能追踪器
            </summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.SuccessUrl">
            <summary>登录成功后跳转地址。~/Admin</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.LoginUrl">
            <summary>本地登录检查地址。~/Admin/User/Login</summary>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.SecurityKey">
            <summary>安全密钥。keyName$keyValue</summary>
            <remarks>
            公钥，用于RSA加密用户密码，在通信链路上保护用户密码安全，可以写死在代码里面。
            密钥前面可以增加keyName，形成keyName$keyValue，用于向服务端指示所使用的密钥标识，方便未来更换密钥。
            </remarks>
        </member>
        <member name="P:NewLife.Cube.Web.SsoProvider.Current">
            <summary>已登录用户</summary>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetClient(System.String)">
            <summary>获取OAuth客户端</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetReturnUrl(Microsoft.AspNetCore.Http.HttpRequest,System.Boolean)">
            <summary>获取返回地址</summary>
            <param name="request">请求对象</param>
            <param name="referr">是否使用引用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetLoginUrl(System.String)">
            <summary>获取登录回跳地址</summary>
            <param name="logId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetRedirect(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>获取回调地址</summary>
            <param name="request"></param>
            <param name="redirectUrl"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetConnect(NewLife.Web.OAuthClient)">
            <summary>获取连接信息</summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.OnLogin(NewLife.Web.OAuthClient,System.IServiceProvider,NewLife.Cube.Entity.UserConnect,System.Boolean,System.Int32)">
            <summary>登录成功</summary>
            <param name="client">OAuth客户端</param>
            <param name="context">服务提供者。可用于获取HttpContext成员</param>
            <param name="uc">用户链接</param>
            <param name="forceBind">强行绑定，把第三方账号强行绑定到当前已登录账号</param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.Fill(NewLife.Web.OAuthClient,NewLife.Model.IManageUser)">
            <summary>填充用户，登录成功并获取用户信息之后</summary>
            <param name="client"></param>
            <param name="user"></param>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.OnBind(NewLife.Cube.Entity.UserConnect,NewLife.Web.OAuthClient,System.Int32)">
            <summary>绑定用户，用户未有效绑定或需要强制绑定时</summary>
            <param name="uc"></param>
            <param name="client"></param>
            <param name="userId"></param>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.BindAfterLogin(System.Int64)">
            <summary>登录后绑定当前用户</summary>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.Logout">
            <summary>注销</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetAccessToken(NewLife.Web.OAuthServer,System.String,System.String,System.String,System.String)">
            <summary>获取访问令牌</summary>
            <param name="sso"></param>
            <param name="client_id"></param>
            <param name="client_secret"></param>
            <param name="code"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetAccessTokenByPassword(NewLife.Web.OAuthServer,System.String,System.String,System.String,System.String)">
            <summary>密码式获取令牌</summary>
            <param name="sso"></param>
            <param name="client_id">应用标识</param>
            <param name="username">用户名</param>
            <param name="password">密码。支持md5密码，以md5#开头</param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetAccessTokenByClientCredentials(NewLife.Web.OAuthServer,System.String,System.String,System.String,System.String)">
            <summary>凭证式获取令牌</summary>
            <param name="sso"></param>
            <param name="client_id">应用标识</param>
            <param name="client_secret">密钥</param>
            <param name="username">用户名。可以是设备编码等唯一使用者标识</param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.RefreshToken(NewLife.Web.OAuthServer,System.String,System.String,System.String)">
            <summary>凭证式获取令牌</summary>
            <param name="sso"></param>
            <param name="client_id">应用标识</param>
            <param name="refresh_token">刷新令牌</param>
            <param name="ip">IP地址</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetUser(NewLife.Web.OAuthServer,System.String)">
            <summary>获取用户信息</summary>
            <param name="sso"></param>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetUserInfo(NewLife.Web.OAuthServer,System.String,NewLife.Model.IManageUser)">
            <summary>获取用户信息</summary>
            <param name="sso"></param>
            <param name="token"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.FetchAvatar(NewLife.Model.IManageUser,System.String)">
            <summary>抓取远程头像</summary>
            <param name="user"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Web.SsoProvider.GetKey(System.String)">
            <summary>获取指定Key，默认实现从SecurityKey解析</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Web.UserAgentParser">
            <summary>
            浏览器特性分析器
            </summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.UserAgent">
            <summary>原始字符串</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Compatible">
            <summary>
            兼容性，一般是 Mozilla/5.0
            </summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Platform">
            <summary>平台</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Encryption">
            <summary>加密特性</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.OSorCPU">
            <summary>系统或处理器</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Device">
            <summary>设备</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.DeviceBuild">
            <summary>设备编译版本</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Version">
            <summary>发行版本</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Brower">
            <summary>用户浏览器</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.Mobile">
            <summary>移动版本</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.NetType">
            <summary>网络类型</summary>
        </member>
        <member name="M:NewLife.Cube.Web.UserAgentParser.Parse(System.String)">
            <summary>
            分析浏览器UserAgent字符串
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.IsRobot">
            <summary>是否蜘蛛机器人</summary>
        </member>
        <member name="P:NewLife.Cube.Web.UserAgentParser.IsMobile">
            <summary>是否移动端</summary>
        </member>
        <member name="T:NewLife.Cube.WebHelper2">
            <summary>Web助手</summary>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>获取请求值</summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>获取Session值</summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Get(Microsoft.AspNetCore.Http.ISession,System.String,System.Type)">
            <summary>获取Session值</summary>
            <param name="session"></param>
            <param name="key"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.Set(Microsoft.AspNetCore.Http.ISession,System.String,System.Object)">
            <summary>设置Session值</summary>
            <param name="session"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.GetUserHost(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>获取用户主机</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.WebHelper2.Params">
            <summary>返回请求字符串和表单的名值字段，过滤空值和ViewState，同名时优先表单</summary>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.GetLinuxName">
            <summary>获取Linux发行版名称</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.GetReferer(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>获取引用页</summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.WebHelper2.FixTenantMenu">
            <summary>修正多租户菜单</summary>
        </member>
        <member name="T:NewLife.Cube.Jobs.BackupDbService">
            <summary>备份数据库服务</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.BackupDbService.Init">
            <summary>初始化默认作业</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.BackupDbService.BackupDb(System.String)">
            <summary>备份数据库</summary>
            <param name="connNames"></param>
        </member>
        <member name="T:NewLife.Cube.Jobs.CronJobAttribute">
            <summary>Cron定时作业特性</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.CronJobAttribute.#ctor(System.String,System.String)">
            <summary>Cron定时作业特性</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.CronJobAttribute.Name">
            <summary>名称。作业唯一名</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.CronJobAttribute.Cron">
            <summary>Cron表达式。仅用于创建作业，后续以用户修改后的为准</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.CronJobAttribute.Enable">
            <summary>默认启用。创建作业时是否自动启用</summary>
        </member>
        <member name="T:NewLife.Cube.Jobs.CubeJobBase">
            <summary>CronJob作业基类</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.CubeJobBase.Job">
            <summary>定时作业</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.CubeJobBase.Execute(System.String)">
            <summary>执行</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Jobs.CubeJobBase`1">
            <summary>CronJob作业基类</summary>
            <typeparam name="TArgument"></typeparam>
        </member>
        <member name="M:NewLife.Cube.Jobs.CubeJobBase`1.Execute(System.String)">
            <summary>执行</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.Jobs.CubeJobBase`1.OnExecute(`0)">
            <summary>执行</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Jobs.HttpJobArgument">
            <summary>Http作业参数</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.HttpJobArgument.Method">
            <summary>请求方法。Get/Post</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.HttpJobArgument.Url">
            <summary>请求地址</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.HttpJobArgument.Body">
            <summary>请求参数</summary>
        </member>
        <member name="T:NewLife.Cube.Jobs.HttpService">
            <summary>HTTP服务</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.HttpService.#ctor(NewLife.Log.ITracer)">
            <summary>实例化HTTP服务，用于定期请求指定Url地址</summary>
            <param name="tracer"></param>
        </member>
        <member name="M:NewLife.Cube.Jobs.HttpService.OnExecute(NewLife.Cube.Jobs.HttpJobArgument)">
            <summary>执行作业</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Jobs.ICubeJob">
            <summary>
            CronJob作业
            </summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.ICubeJob.Execute(System.String)">
            <summary>执行定时作业</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.Jobs.SqlJobArgument">
            <summary>Sql作业参数</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.SqlJobArgument.ConnName">
            <summary>连接名</summary>
        </member>
        <member name="P:NewLife.Cube.Jobs.SqlJobArgument.Sql">
            <summary>Sql文本</summary>
        </member>
        <member name="T:NewLife.Cube.Jobs.SqlService">
            <summary>SQL服务</summary>
        </member>
        <member name="M:NewLife.Cube.Jobs.SqlService.#ctor(NewLife.Log.ITracer)">
            <summary>实例化SQL服务，用于定期执行指定SQL语句</summary>
            <param name="tracer"></param>
        </member>
        <member name="M:NewLife.Cube.Jobs.SqlService.OnExecute(NewLife.Cube.Jobs.SqlJobArgument)">
            <summary>执行作业</summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ManagerProviderHelper">
            <summary>管理提供者助手</summary>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.SetPrincipal(XCode.Membership.IManageProvider,System.IServiceProvider)">
            <summary>设置当前用户</summary>
            <param name="provider">提供者</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.TryLogin(XCode.Membership.IManageProvider,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>尝试登录。如果Session未登录则借助Cookie</summary>
            <param name="provider">提供者</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.ChooseTenant(Microsoft.AspNetCore.Http.HttpContext,System.Int32)">
            <summary>设置租户</summary>
            <param name="context"></param>
            <param name="userId"></param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.CheckTenantRole">
            <summary>检查并添加租户管理员角色</summary>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.SetTenant(Microsoft.AspNetCore.Http.HttpContext,System.Int32)">
            <summary>设置租户</summary>
            <param name="context"></param>
            <param name="tenantId"></param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.GetJwt">
            <summary>生成令牌</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.LoadCookie(XCode.Membership.IManageProvider,System.Boolean,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>从Cookie加载用户信息</summary>
            <param name="provider">提供者</param>
            <param name="autologin">是否自动登录</param>
            <param name="context">Http上下文，兼容NetCore</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.SaveCookie(XCode.Membership.IManageProvider,NewLife.Model.IManageUser,System.TimeSpan,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>保存用户信息到Cookie</summary>
            <param name="provider">提供者</param>
            <param name="user">用户</param>
            <param name="expire">过期时间</param>
            <param name="context">Http上下文，兼容NetCore</param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.SaveTenant(Microsoft.AspNetCore.Http.HttpContext,System.Int32)">
            <summary>改变选中的租户</summary>
            <param name="context"></param>
            <param name="tenantId">0管理后台场景，大于0租户场景</param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.GetTenantId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>获取cookie中tenantId</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.AddManageProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加管理提供者
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:NewLife.Cube.ManagerProviderHelper.UseManagerProvider(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用管理提供者
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:NewLife.Cube.Modules.IModule">
            <summary>
            魔方模块接口。魔方将自动扫描加载实现该接口的模块，实现应用插件功能
            </summary>
        </member>
        <member name="M:NewLife.Cube.Modules.IModule.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加模块
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:NewLife.Cube.Modules.IModule.Use(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            使用模块
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:NewLife.Cube.Modules.ModuleAttribute">
            <summary>魔方模块特性</summary>
        </member>
        <member name="P:NewLife.Cube.Modules.ModuleAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:NewLife.Cube.Modules.ModuleAttribute.#ctor(System.String)">
            <summary>
            指定驱动名称
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:NewLife.Cube.Modules.ModuleManager">
            <summary>
            模块管理
            </summary>
        </member>
        <member name="P:NewLife.Cube.Modules.ModuleManager.Modules">
            <summary>
            插件集合
            </summary>
        </member>
        <member name="M:NewLife.Cube.Modules.ModuleManager.LoadAll(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            加载所有插件
            </summary>
        </member>
        <member name="M:NewLife.Cube.Modules.ModuleManager.ScanAll">
            <summary>
            扫描所有程序集，加载插件
            </summary>
        </member>
        <member name="T:NewLife.Cube.SessionProvider">
            <summary>基于内存实现的会话</summary>
        </member>
        <member name="P:NewLife.Cube.SessionProvider.Expire">
            <summary>有效期</summary>
        </member>
        <member name="P:NewLife.Cube.SessionProvider.Cache">
            <summary>会话存储</summary>
        </member>
        <member name="M:NewLife.Cube.SessionProvider.GetSession(System.String)">
            <summary>根据会话标识获取session</summary>
            <param name="sessionKey"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.NullableDictionary2`2">
            <summary>可空字典。获取数据时如果指定键不存在可返回空而不是抛出异常</summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:NewLife.Cube.NullableDictionary2`2.#ctor">
            <summary>实例化一个可空字典</summary>
        </member>
        <member name="M:NewLife.Cube.NullableDictionary2`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>指定比较器实例化一个可空字典</summary>
            <param name="comparer"></param>
        </member>
        <member name="M:NewLife.Cube.NullableDictionary2`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>实例化一个可空字典</summary>
            <param name="dic"></param>
        </member>
        <member name="M:NewLife.Cube.NullableDictionary2`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>实例化一个可空字典</summary>
            <param name="dic"></param>
            <param name="comparer"></param>
        </member>
        <member name="P:NewLife.Cube.NullableDictionary2`2.Item(`0)">
            <summary>获取 或 设置 数据</summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.DataSourceDelegate">
            <summary>获取数据源委托</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.DataVisibleDelegate">
            <summary>数据可见委托</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.DataField">
            <summary>数据字段</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Description">
            <summary>描述</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Category">
            <summary>类别</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Type">
            <summary>属性类型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.TypeName">
            <summary>属性类型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.ItemType">
            <summary>元素类型。image,file-zip,html,singleSelect,multipleSelect</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Length">
            <summary>长度</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Precision">
            <summary>精度</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Scale">
            <summary>位数</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Nullable">
            <summary>允许空</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.PrimaryKey">
            <summary>主键</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.ReadOnly">
            <summary>只读</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Visible">
            <summary>
            是否可见
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Required">
            <summary>
            是否必填
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Authority">
            <summary>
            权限相关。用户自由发挥
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Extended1">
            <summary>
            扩展字段。用户自由发挥
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Extended2">
            <summary>
            扩展字段。用户自由发挥
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Extended3">
            <summary>
            扩展字段。用户自由发挥
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Field">
            <summary>原始字段</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.MapField">
            <summary>映射字段</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.LovCode">
            <summary>LOV 配置代码</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.MapProvider">
            <summary>映射提供者</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.DataSource">
            <summary>多选数据源</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.DataVisible">
            <summary>是否显示</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Properties">
            <summary>扩展属性</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.#ctor">
            <summary>实例化数据字段</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.#ctor(XCode.Configuration.FieldItem)">
            <summary>实例化数据字段</summary>
            <param name="field"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.ToString">
            <summary>已重载</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.Fill(XCode.Configuration.FieldItem)">
            <summary>从FieldItem填充</summary>
            <param name="field"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.Fill(System.Reflection.PropertyInfo)">
            <summary>从PropertyInfo填充</summary>
            <param name="property"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.Clone">
            <summary>克隆</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.IsBigText">
            <summary>是否大文本字段</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.IsAttachment">
            <summary>是否附件列</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Cube.ViewModels.DataField.Services">
            <summary>扩展服务</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.AddService``1(``0)">
            <summary>添加服务</summary>
            <typeparam name="TService"></typeparam>
            <param name="service"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.DataField.GetService``1">
            <summary>获取服务</summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ErrorModel">
            <summary>错误模型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ErrorModel.RequestId">
            <summary>请求标识</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ErrorModel.Uri">
            <summary>资源地址</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ErrorModel.Exception">
            <summary>异常信息</summary>
        </member>
        <member name="T:NewLife.Cube.ViewModels.GetExpandDelegate">
            <summary>获取扩展字段委托</summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.FormField">
            <summary>表单字段</summary>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ILinkExtend">
            <summary>超链接扩展</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ILinkExtend.Resolve(NewLife.Cube.ViewModels.DataField,NewLife.Data.IModel)">
            <summary>解析超链接HTML</summary>
            <param name="field"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ItemModel">
            <summary>界面元素模型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.Value">
            <summary>数值</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.Type">
            <summary>类型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.Length">
            <summary>字段长度</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.Format">
            <summary>格式化字符串</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.ItemType">
            <summary>元素类型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ItemModel.HtmlAttributes">
            <summary>Html特性</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ItemModel.#ctor(System.String,System.Object,System.Type)">
            <summary>实例化</summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ItemModel.#ctor(System.String,System.Object,System.Type,System.String,System.Object)">
            <summary>实例化</summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
            <param name="format"></param>
            <param name="htmlAttributes"></param>
        </member>
        <member name="T:NewLife.Cube.ViewModels.IUrlExtend">
            <summary>Url扩展</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.IUrlExtend.Resolve(NewLife.Cube.ViewModels.DataField,NewLife.Data.IModel)">
            <summary>解析Url地址</summary>
            <param name="field"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ListBoxModel">
            <summary>下拉列表模型</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.Value">
            <summary>数据</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.SelectedValues">
            <summary>已选值</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.OptionLabel">
            <summary>标签</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.AutoPostback">
            <summary>自动提交</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListBoxModel.HtmlAttributes">
            <summary>Html特性</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListBoxModel.#ctor(System.String,System.Collections.IEnumerable,System.Object)">
            <summary>实例化</summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="selectedValues"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListBoxModel.#ctor(System.String,System.Collections.IEnumerable,System.Object,System.String,System.Boolean,System.Object)">
            <summary>实例化</summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="selectedValues"></param>
            <param name="optionLabel"></param>
            <param name="autoPostback"></param>
            <param name="htmlAttributes"></param>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ListField">
            <summary>列表字段</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Text">
            <summary>单元格文字</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Title">
            <summary>单元格标题。数据单元格上的提示文字</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Url">
            <summary>单元格链接。数据单元格的链接</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Target">
            <summary>
            链接目标。参考：TargetEnum 
            _blank/_self/_parent/_top
            默认：null,会根据皮肤自动判断打开方式，layui:在框架页多标签打开，ace:在当前页面进行跳转
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Header">
            <summary>头部文字</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.HeaderTitle">
            <summary>头部标题。数据移上去后显示的文字</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.TextAlign">
            <summary>文本对齐方式</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.Class">
            <summary>单元格样式</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.DataAction">
            <summary>
            数据动作。参考：DataAction
            默认：null 作为普通url操作；action 走ajax请求</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.GetValue">
            <summary>获取数据委托。可用于自定义列表页单元格数值的显示</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.ListField.GetClass">
            <summary>获取样式委托。可用于自定义列表页单元格的样式</summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.Fill(XCode.Configuration.FieldItem)">
            <summary>填充</summary>
            <param name="field"></param>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.Replace(System.String,NewLife.Data.IExtend,NewLife.Cube.ViewModels.ListField.EnumModes)">
            <summary>替换模版中的{page:name}标签数据，从page读取</summary>
            <param name="input"></param>
            <param name="data"></param>
            <param name="enumMode"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetDisplayName(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算DisplayName，替换其中变量</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetText(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算单元格文字，替换其中变量</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetLinkName(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算链接名，替换其中变量</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetLink(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算超链接HTML，替换其中变量，支持ILinkExtend</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetUrl(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算url，替换其中变量</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetTitle(NewLife.Data.IModel,NewLife.Data.IExtend)">
            <summary>针对指定实体对象计算title，替换其中变量</summary>
            <param name="data"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.ListField.GetTextClass(NewLife.Data.IModel)">
            <summary>获取文本样式</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.LoginConfigModel">
            <summary>
            登录配置模型
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.LoginConfigModel.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.LoginConfigModel.Logo">
            <summary>
            Logo图标
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.LoginConfigModel.AllowLogin">
            <summary>
            允许登录
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.LoginConfigModel.AllowRegister">
            <summary>
            允许注册
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.LoginConfigModel.Providers">
            <summary>
            提供者
            </summary>
        </member>
        <member name="T:NewLife.Cube.ViewModels.OAuthConfigModel">
            <summary>
            OAuth配置模型
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.OAuthConfigModel.Name">
            <summary>
            应用名
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.OAuthConfigModel.Logo">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.OAuthConfigModel.NickName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="T:NewLife.Cube.ViewModels.MenuTree">
            <summary>
            菜单树
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.ID">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Name">
            <summary>
            名称
            </summary>
            <value></value>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.FullName">
            <summary>全名</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.ParentID">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Url">
            <summary>
            链接
            </summary>
            <value></value>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Icon">
            <summary>
            图标
            </summary>
            <value></value>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Visible">
            <summary>
            是否可见
            </summary>
            <value></value>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.NewWindow">
            <summary>是否新窗口打开</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Permissions">
            <summary>可选权限子项</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.MenuTree.Children">
            <summary>
            子菜单
            </summary>
            <value></value>
        </member>
        <member name="F:NewLife.Cube.ViewModels.MenuTree.GetChildren">
            <summary>
            获取子菜单的方法
            </summary>
        </member>
        <member name="M:NewLife.Cube.ViewModels.MenuTree.GetMenuTree``1(System.Func{NewLife.Cube.ViewModels.MenuTree,``0},System.Func{``0,System.Collections.Generic.IList{NewLife.Cube.ViewModels.MenuTree}},``0)">
            <summary>
            获取菜单树
            </summary>
            <param name="getChildrenSrc">自定义的获取子菜单需要数据的方法</param>
            <param name="getMenuList">获取菜单列表的方法</param>
            <param name="src">获取菜单列表的初始数据来源</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.ViewModels.MenuTree.ToString">
            <summary>
            已重载。
            </summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.ViewModels.SearchField">
            <summary>搜索字段</summary>
        </member>
        <member name="P:NewLife.Cube.ViewModels.SearchField.Multiple">
            <summary>是否多选框</summary>
            <remarks>
            多选框返回的数据有多条，需要逗号分隔；
            如果没有选中任何项，则没有返回，此时会强制覆盖Url参数中的同名字段，避免取消选中无效的问题。
            </remarks>
        </member>
        <member name="T:NewLife.Cube.ViewModels.TextAligns">
            <summary>文本对齐方式</summary>
            <remarks>
            可选 text-center/text-left/text-right/text-justify
            </remarks>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Default">
            <summary>默认，文本左对齐，数字右对齐</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Left">
            <summary>左对齐</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Center">
            <summary>居中对齐</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Right">
            <summary>右对齐</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Justify">
            <summary>两端对齐</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.TextAligns.Nowrap">
            <summary>阻止文字折行</summary>
        </member>
        <member name="T:NewLife.Cube.ViewModels.ViewKinds">
            <summary>视图类型。如List/Detail/AddForm/EditForm/Search等</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.ViewKinds.List">
            <summary>列表</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.ViewKinds.Detail">
            <summary>详情</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.ViewKinds.AddForm">
            <summary>添加表单</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.ViewKinds.EditForm">
            <summary>编辑表单</summary>
        </member>
        <member name="F:NewLife.Cube.ViewModels.ViewKinds.Search">
            <summary>搜索</summary>
        </member>
        <member name="T:NewLife.Cube.GetValueDelegate">
            <summary>获取数据委托</summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.GroupVisibleDelegate">
            <summary>分组可见委托</summary>
            <param name="model"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Cube.FieldCollection">
            <summary>字段集合</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.Kind">
            <summary>类型</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.Factory">
            <summary>工厂</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.HiddenGroups">
            <summary>需要隐藏的分组名</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.GetRowClass">
            <summary>获取样式委托。可用于自定义列表页单元格的样式</summary>
        </member>
        <member name="P:NewLife.Cube.FieldCollection.GroupVisible">
            <summary>是否显示分组</summary>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.#ctor(NewLife.Cube.ViewModels.ViewKinds)">
            <summary>实例化一个字段集合</summary>
            <param name="kind"></param>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.#ctor(XCode.IEntityFactory,NewLife.Cube.ViewModels.ViewKinds)">
            <summary>使用工厂实例化一个字段集合</summary>
            <param name="factory"></param>
            <param name="kind"></param>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Create(XCode.Configuration.FieldItem)">
            <summary>为指定字段创建数据字段，可以为空</summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Add(XCode.Configuration.FieldItem)">
            <summary>为指定字段创建数据字段</summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Add(System.Reflection.PropertyInfo)">
            <summary>为指定属性创建数据字段</summary>
            <param name="property"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.SetRelation(System.Boolean)">
            <summary>设置扩展关系</summary>
            <param name="isForm">是否表单使用</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.FindIndex(System.String)">
            <summary>查找指定字段</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddField(System.String)">
            <summary>从AllFields中添加字段，可以是扩展属性</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveField(System.String[])">
            <summary>删除字段</summary>
            <param name="names">要删除的字段名称，支持*模糊匹配</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveBegin(System.String)">
            <summary>删除从指定字段开始的所有字段</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Replace(System.String,System.String)">
            <summary>操作字段列表，把旧项换成新项</summary>
            <param name="oriName"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveCreateField">
            <summary>设置是否显示创建信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveUpdateField">
            <summary>设置是否显示更新信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.RemoveRemarkField">
            <summary>设置是否显示备注信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddDataField(System.String,System.String,System.String)">
            <summary>添加定制字段，插入指定列前后</summary>
            <param name="name"></param>
            <param name="beforeName"></param>
            <param name="afterName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.AddListField(System.String,System.String,System.String)">
            <summary>添加定制字段，插入指定列前后</summary>
            <param name="name"></param>
            <param name="beforeName"></param>
            <param name="afterName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.GetField(System.String)">
            <summary>获取指定名称的定制字段</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Expand(XCode.IEntity,System.Object,System.String)">
            <summary>当前字段集合加入目标对象作为扩展字段，用于动态表单</summary>
            <param name="entity"></param>
            <param name="parameter"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.ReadForm(System.Object,Microsoft.AspNetCore.Http.IFormCollection,System.String)">
            <summary>从表单读取数据到扩展字段的目标对象，稍候序列化并写入扩展字段</summary>
            <param name="parameter"></param>
            <param name="form"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.GroupByCategory(XCode.IEntity)">
            <summary>按类别分组获取字段列表</summary>
            <param name="entity">实体对象</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Cube.FieldCollection.Clone">
            <summary>克隆集合</summary>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.HttpContext">
            <summary>Http上下文</summary>
        </member>
        <member name="P:NewLife.Web.HttpContext.Current">
            <summary>当前Http上下文</summary>
        </member>
        <member name="M:NewLife.Web.HttpContext.Configure(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>设置Http上下文访问器</summary>
            <param name="accessor"></param>
        </member>
        <member name="T:NewLife.Web.StaticHttpContextExtensions">
            <summary>Http上下文扩展</summary>
        </member>
        <member name="M:NewLife.Web.StaticHttpContextExtensions.UseStaticHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>配置静态Http上下文访问器</summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.Pager">
            <summary>分页器。包含分页排序参数，支持构造Url的功能</summary>
        </member>
        <member name="T:NewLife.Web.Pager.__">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.Sort">
            <summary>排序字段</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.Desc">
            <summary>是否降序</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.PageIndex">
            <summary>页面索引</summary>
        </member>
        <member name="F:NewLife.Web.Pager.__.PageSize">
            <summary>页面大小</summary>
        </member>
        <member name="F:NewLife.Web.Pager._">
            <summary>名称类。用户可根据需要修改Url参数名</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Params">
            <summary>参数集合</summary>
        </member>
        <member name="P:NewLife.Web.Pager.PageUrlTemplate">
            <summary>分页链接模版。内部将会替换{链接}和{名称}</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Default">
            <summary>默认参数。如果分页参数为默认参数，则不参与构造Url</summary>
        </member>
        <member name="P:NewLife.Web.Pager.Item(System.String)">
            <summary>获取/设置 参数</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.Pager.#ctor(NewLife.Data.PageParameter)">
            <summary>用另一个分页参数实例化</summary>
            <param name="pm"></param>
        </member>
        <member name="M:NewLife.Web.Pager.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>借助字典实例化</summary>
            <param name="parameters"></param>
        </member>
        <member name="M:NewLife.Web.Pager.GetBaseUrl(System.Boolean,System.Boolean,System.Boolean,System.String[])">
            <summary>获取基础Url，用于附加参数</summary>
            <param name="where">查询条件，不包含排序和分页</param>
            <param name="order">排序</param>
            <param name="page">分页</param>
            <param name="excludes">要排除的参数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetSortUrl(System.String)">
            <summary>获取排序的Url</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetPageUrl(System.String,System.Int64)">
            <summary>获取分页Url</summary>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.GetPage(System.String)">
            <summary>获取分页Url</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.Pager.ToModel">
            <summary>转为分页模型</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.Pager.Items">
            <summary>参数集合</summary>
        </member>
        <member name="T:NewLife.Web.PageModel">
            <summary>分页模型</summary>
        </member>
        <member name="P:NewLife.Web.PageModel.PageIndex">
            <summary>获取 或 设置 页面索引。从1开始，默认1</summary>
            <remarks>如果设定了开始行，分页时将不再使用PageIndex</remarks>
        </member>
        <member name="P:NewLife.Web.PageModel.PageSize">
            <summary>获取 或 设置 页面大小。默认20，若为0表示不分页</summary>
        </member>
        <member name="P:NewLife.Web.PageModel.TotalCount">
            <summary>获取 或 设置 总记录数</summary>
        </member>
        <member name="P:NewLife.Web.PageModel.LongTotalCount">
            <summary>获取 或 设置 总记录数，字符串类型</summary>
        </member>
        <member name="T:NewLife.Web.WebHelper">
            <summary>网页工具类</summary>
        </member>
        <member name="P:NewLife.Web.WebHelper.Params">
            <summary>返回请求字符串和表单的名值字段，过滤空值和ViewState，同名时优先表单</summary>
        </member>
        <member name="M:NewLife.Web.WebHelper.GetParams(Microsoft.AspNetCore.Http.HttpContext,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>获取请求参数字段，Key不区分大小写，合并多数据源</summary>
            <param name="ctx">Http上下文</param>
            <param name="route">从路由参数获取</param>
            <param name="query">从Url请求参数获取</param>
            <param name="form">从表单获取</param>
            <param name="body">从Body解析Json获取</param>
            <param name="mergeValue">同名是否合并参数值</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.GetRawUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>获取原始请求Url，支持反向代理</summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.SaveAs(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>保存上传文件</summary>
            <param name="file"></param>
            <param name="filename"></param>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParam(System.Text.StringBuilder,System.String)">
            <summary>追加Url参数，不为空时加与符号</summary>
            <param name="sb"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParam(System.Text.StringBuilder,System.String,System.Object)">
            <summary>追加Url参数，不为空时加与符号</summary>
            <param name="sb">字符串构建</param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParams(System.Text.StringBuilder,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>把一个参数字典追加Url参数，指定包含的参数</summary>
            <param name="sb">字符串构建</param>
            <param name="pms">参数字典</param>
            <param name="includes">包含的参数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.UrlParamsExcept(System.Text.StringBuilder,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>把一个参数字典追加Url参数，排除一些参数</summary>
            <param name="sb">字符串构建</param>
            <param name="pms">参数字典</param>
            <param name="excludes">要排除的参数</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AsUri(System.String,System.Uri)">
            <summary>相对路径转Uri</summary>
            <param name="url">相对路径</param>
            <param name="baseUri">基础</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AppendReturn(System.Uri,System.String,System.String)">
            <summary>打包返回地址</summary>
            <param name="uri"></param>
            <param name="returnUrl"></param>
            <param name="returnKey"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.AppendReturn(System.String,System.String,System.String)">
            <summary>打包返回地址</summary>
            <param name="url"></param>
            <param name="returnUrl"></param>
            <param name="returnKey"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.WebHelper.FillDeviceId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>获取魔方设备Id。该Id代表一台设备，尽可能在多个应用中共用</summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.OAuthClient">
            <summary>OAuth 2.0 客户端</summary>
            <remarks>
            最简单易懂的 OAuth2.0
            http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html
            
            OAuth 2.0 的四种方式:
            1，code 授权码
            2，token 隐藏式
            3，password 密码式
            4，client_credentials 凭证式
            </remarks>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Name">
            <summary>名称</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Server">
            <summary>验证服务器地址</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AccessServer">
            <summary>令牌服务地址。可以不同于验证地址的内网直达地址</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Key">
            <summary>应用Key</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Secret">
            <summary>安全码</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AuthUrl">
            <summary>验证地址</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AccessUrl">
            <summary>访问令牌地址</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.ResponseType">
            <summary>响应类型</summary>
            <remarks>
            验证服务器跳转回来子系统时的类型，默认code，此时还需要子系统服务端请求验证服务器换取AccessToken；
            可选token，此时验证服务器直接返回AccessToken，子系统不需要再次请求。
            </remarks>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Scope">
            <summary>作用域</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.FieldMap">
            <summary>
            字段映射
            </summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Config">
            <summary>OAuth配置</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Tracer">
            <summary>APM跟踪器</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Code">
            <summary>授权码</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AccessToken">
            <summary>访问令牌</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.RefreshToken">
            <summary>刷新令牌</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.OpenID">
            <summary>统一标识。当前应用下唯一</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.UnionID">
            <summary>企业级标识。当前企业所有应用下唯一</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Expire">
            <summary>过期时间</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Items">
            <summary>访问项</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Create(System.String)">
            <summary>根据名称创建客户端</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Apply(System.String)">
            <summary>应用参数设置</summary>
            <param name="name"></param>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Apply(NewLife.Cube.Entity.OAuthConfig)">
            <summary>应用参数设置</summary>
            <param name="mi"></param>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Support(System.String)">
            <summary>是否支持指定用户端，也就是判断是否在特定应用内打开，例如QQ/DingDing/WeiXin</summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Init(System.String)">
            <summary>构造跳转验证前，针对指定客户端进行初始化</summary>
            <param name="userAgent"></param>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Authorize(System.String,System.String,System.Uri)">
            <summary>构建跳转验证地址</summary>
            <param name="redirect">验证完成后调整的目标地址</param>
            <param name="state">用户状态数据</param>
            <param name="baseUri">相对地址的基地址</param>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetAccessToken(System.String)">
            <summary>根据授权码获取访问令牌</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.OAuthClient.OpenIDUrl">
            <summary>OpenID地址</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetOpenID">
            <summary>根据授权码获取访问令牌</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.OAuthClient.UserUrl">
            <summary>用户信息地址</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.UserID">
            <summary>用户ID</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.UserName">
            <summary>用户名</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.NickName">
            <summary>昵称</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Sex">
            <summary>性别。0未知，1男，2女</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.UserCode">
            <summary>用户代码</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.DepartmentCode">
            <summary>部门代码，唯一标识</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.DepartmentName">
            <summary>部门名称</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.ParentDepartmentCode">
            <summary>父级部门代码，唯一标识</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.ParentDepartmentName">
            <summary>父级部门名称</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Mobile">
            <summary>手机</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Mail">
            <summary>邮箱</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Avatar">
            <summary>头像</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Detail">
            <summary>明细。用户个人描述，座右铭等</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.DeviceId">
            <summary>设备标识。</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AreaId">
            <summary>地区编码</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.AreaName">
            <summary>地区名</summary>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Birthday">
            <summary>生日</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetUserInfo">
            <summary>获取用户信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Fill(NewLife.Model.IManageUser)">
            <summary>填充用户，登录成功并获取用户信息之后</summary>
            <param name="user"></param>
        </member>
        <member name="P:NewLife.Web.OAuthClient.LogoutUrl">
            <summary>注销地址</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.Logout(System.String,System.String,System.Uri)">
            <summary>注销</summary>
            <param name="redirect">完成后调整的目标地址</param>
            <param name="state">用户状态数据</param>
            <param name="baseUri">相对地址的基地址</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetUrl(System.String,System.String)">
            <summary>替换地址模版参数</summary>
            <param name="name"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetNameValues(System.String)">
            <summary>获取名值字典</summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.OAuthClient.LastHtml">
            <summary>最后一次请求的响应内容</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetHtml(System.String,System.String)">
            <summary>发起请求，获取内容</summary>
            <param name="action"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetClient">
            <summary>获取客户端</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.CreateClient">
            <summary>创建客户端</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="M:NewLife.Web.OAuthClient.GetAvatarUrl">
            <summary>获取头像路径</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.OAuthClient.Log">
            <summary>日志</summary>
        </member>
        <member name="M:NewLife.Web.OAuthClient.WriteLog(System.String,System.Object[])">
            <summary>写日志</summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:NewLife.Web.OAuthServer">
            <summary>单点登录服务端</summary>
        </member>
        <member name="P:NewLife.Web.OAuthServer.TokenProvider">
            <summary>令牌提供者</summary>
        </member>
        <member name="P:NewLife.Web.OAuthServer.Instance">
            <summary>实例</summary>
        </member>
        <member name="M:NewLife.Web.OAuthServer.Auth(System.String,System.String,System.String)">
            <summary>验证应用</summary>
            <param name="client_id"></param>
            <param name="client_secret"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.Authorize(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>验证用户身份</summary>
            <remarks>
            子系统需要验证访问者身份时，引导用户跳转到这里。
            用户登录完成后，得到一个独一无二的code，并跳转回去子系统。
            </remarks>
            <param name="client_id">应用标识</param>
            <param name="redirect_uri">回调地址</param>
            <param name="response_type">响应类型。默认code</param>
            <param name="scope">授权域</param>
            <param name="state">用户状态数据</param>
            <param name="ip">IP地址</param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.GetResult(System.String,NewLife.Model.IManageUser)">
            <summary>根据验证结果获取跳转回子系统的Url</summary>
            <param name="key"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.CreateToken(NewLife.Cube.Entity.App,System.String,System.Object,System.String)">
            <summary>创建令牌</summary>
            <param name="app"></param>
            <param name="name"></param>
            <param name="payload"></param>
            <param name="refreshName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.GetToken(System.String)">
            <summary>根据Code获取令牌</summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.Decode(System.String)">
            <summary>解码令牌</summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuthServer.GetProvider">
            <summary>获取令牌提供者</summary>
            <returns></returns>
        </member>
        <member name="P:NewLife.Web.OAuthServer.Log">
            <summary>日志</summary>
        </member>
        <member name="M:NewLife.Web.OAuthServer.WriteLog(System.String,System.Object[])">
            <summary>写日志</summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.AlipayClient">
            <summary>支付宝身份验证提供者</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.AlipayClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.AlipayClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.BaiduClient">
            <summary>百度身份验证提供者</summary>
            <remarks>
            平台 http://developer.baidu.com/console
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.BaiduClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.BaiduClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.GithubClient">
            <summary>身份验证提供者</summary>
            <remarks>
            平台 https://github.com/settings/developers
            </remarks>
        </member>
        <member name="P:NewLife.Web.OAuth.GithubClient.TokenType">
            <summary>令牌类型</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.GithubClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.GithubClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="M:NewLife.Web.OAuth.GithubClient.CreateClient">
            <summary>创建客户端。github要求必须有useragent</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.GithubClient.GetHtml(System.String,System.String)">
            <summary>发起请求，获取内容</summary>
            <param name="action"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.OAuth.MicrosoftClient">
            <summary>微软身份验证提供者</summary>
            <remarks>
            平台 https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps
            参考文档 https://docs.microsoft.com/zh-cn/azure/active-directory/develop/v2-oauth2-auth-code-flow
            </remarks>
        </member>
        <member name="P:NewLife.Web.OAuth.MicrosoftClient.Tenant">
            <summary>租户。默认common</summary>
            <remarks>
            请求路径中的 {tenant} 值可用于控制哪些用户可以登录应用程序。 可以使用的值包括 common、organizations、consumers 和租户标识符。
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.Apply(NewLife.Cube.Entity.OAuthConfig)">
            <summary>应用参数</summary>
            <param name="mi"></param>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.SetMode(System.String)">
            <summary>设置工作模式</summary>
            <param name="mode"></param>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.GetHtml(System.String,System.String)">
            <summary>发起请求，获取内容</summary>
            <param name="action"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="M:NewLife.Web.OAuth.MicrosoftClient.GetUrl(System.String,System.String)">
            <summary>获取Url，替换变量</summary>
            <param name="name"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:NewLife.Web.OAuth.OpenWeixinClient">
            <summary>微信开放平台</summary>
            <remarks>
            文档 https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html
            微信开放平台和微信公众号是两套接口体系，前者主要用于扫码登录，后者主要用于微信客户端（含手机和PC）免登
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.OpenWeixinClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.OpenWeixinClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.QQClient">
            <summary>身份验证提供者</summary>
            <remarks>
            平台 https://connect.qq.com/manage.html
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.QQClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.QQClient.Support(System.String)">
            <summary>是否支持指定用户端，也就是判断是否在特定应用内打开，例如QQ/DingDing/WeiXin</summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QQClient.GetHtml(System.String,System.String)">
            <summary>发起请求，获取内容</summary>
            <param name="action"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QQClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.QyWeiXin">
            <summary>企业微信身份验证提供者</summary>
        </member>
        <member name="P:NewLife.Web.OAuth.QyWeiXin.CorpId">
            <summary>企业Ids</summary>
        </member>
        <member name="P:NewLife.Web.OAuth.QyWeiXin.CorpSecret">
            <summary>应用凭证</summary>
        </member>
        <member name="P:NewLife.Web.OAuth.QyWeiXin.AgentId">
            <summary>应用Id</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.Support(System.String)">
            <summary>是否支持指定用户端，也就是判断是否在特定应用内打开，例如QQ/DingDing/WeiXin</summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.Init(System.String)">
            <summary>针对指定客户端进行初始化</summary>
            <param name="userAgent"></param>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetToken">
            <summary>获取令牌</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetAccessToken">
            <summary>获取访问令牌</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetDepartments">
            <summary>获取部门列表</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetUser(System.String)">
            <summary>获取用户</summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetUsers(System.Int32,System.Boolean)">
            <summary>获取部门内用户列表</summary>
            <param name="departmentId"></param>
            <param name="fetchChild"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetCheckIn(System.String[],System.DateTime,System.DateTime)">
            <summary>获取考勤数据</summary>
            <param name="userIds"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetApprovals(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>获取审批数据</summary>
            <param name="templateId"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="cursor"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetApproval(System.String)">
            <summary>获取审批单详情</summary>
            <param name="sp_no"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetConfig(System.String)">
            <summary>获取配置</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.CreateFor(System.String)">
            <summary>依据魔方字典参数的配置，创建企业微信对象</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetQyClient">
            <summary>获取客户端</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetAsync``1(System.String,System.Object,System.String)">
            <summary>异步请求接口</summary>
            <typeparam name="TResult"></typeparam>
            <param name="action"></param>
            <param name="args"></param>
            <param name="dataName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.PostAsync``1(System.String,System.Object,System.String)">
            <summary>异步请求接口</summary>
            <typeparam name="TResult"></typeparam>
            <param name="action"></param>
            <param name="args"></param>
            <param name="dataName"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.GetUserInfo">
            <summary>企业内部应用获取用户信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.QyWeiXin.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.TaobaoClient">
            <summary>淘宝身份验证提供者</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.TaobaoClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.TaobaoClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.WeiboClient">
            <summary>微博身份验证提供者</summary>
            <remarks>
            文档 https://open.weibo.com/wiki/Oauth2/authorize
            用户 https://open.weibo.com/wiki/2/users/show
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.WeiboClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.WeiboClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
        <member name="T:NewLife.Web.OAuth.WeixinClient">
            <summary>微信公众号</summary>
            <remarks>
            文档 https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html
            微信开放平台和微信公众号是两套接口体系，前者主要用于扫码登录，后者主要用于微信客户端（含手机和PC）免登
            </remarks>
        </member>
        <member name="M:NewLife.Web.OAuth.WeixinClient.#ctor">
            <summary>实例化</summary>
        </member>
        <member name="M:NewLife.Web.OAuth.WeixinClient.Support(System.String)">
            <summary>是否支持指定用户端，也就是判断是否在特定应用内打开，例如QQ/DingDing/WeiXin</summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.WeixinClient.GetUserInfo">
            <summary>只有snsapi_userinfo获取用户信息</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Web.OAuth.WeixinClient.OnGetInfo(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>从响应数据中获取信息</summary>
            <param name="dic"></param>
        </member>
    </members>
</doc>
